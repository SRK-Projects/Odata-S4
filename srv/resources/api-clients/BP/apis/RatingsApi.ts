/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  APIBUSINESSPARTNERABusinessPartnerRatingType,
  APIBUSINESSPARTNERABusinessPartnerRatingTypeCreate,
  APIBUSINESSPARTNERABusinessPartnerRatingTypeUpdate,
  CollectionOfABusinessPartnerRatingType,
  ModelError,
} from '../models/index';
import {
    APIBUSINESSPARTNERABusinessPartnerRatingTypeFromJSON,
    APIBUSINESSPARTNERABusinessPartnerRatingTypeToJSON,
    APIBUSINESSPARTNERABusinessPartnerRatingTypeCreateFromJSON,
    APIBUSINESSPARTNERABusinessPartnerRatingTypeCreateToJSON,
    APIBUSINESSPARTNERABusinessPartnerRatingTypeUpdateFromJSON,
    APIBUSINESSPARTNERABusinessPartnerRatingTypeUpdateToJSON,
    CollectionOfABusinessPartnerRatingTypeFromJSON,
    CollectionOfABusinessPartnerRatingTypeToJSON,
    ModelErrorFromJSON,
    ModelErrorToJSON,
} from '../models/index';

export interface ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetRequest {
    businessPartner: string;
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetOrderbyEnum>;
    $select?: Set<ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetSelectEnum>;
}

export interface ABusinessPartnerBusinessPartnerToBusinessPartnerRatingPostRequest {
    businessPartner: string;
    aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate: APIBUSINESSPARTNERABusinessPartnerRatingTypeCreate;
}

export interface ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDeleteRequest {
    businessPartner: string;
    businessPartnerRatingProcedure: string;
    bPRatingValidityEndDate: Date;
}

export interface ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetRequest {
    businessPartner: string;
    businessPartnerRatingProcedure: string;
    bPRatingValidityEndDate: Date;
    $select?: Set<ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetSelectEnum>;
}

export interface ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatchRequest {
    businessPartner: string;
    businessPartnerRatingProcedure: string;
    bPRatingValidityEndDate: Date;
    aPIBUSINESSPARTNERABusinessPartnerRatingTypeUpdate: APIBUSINESSPARTNERABusinessPartnerRatingTypeUpdate;
}

export interface ABusinessPartnerRatingGetRequest {
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABusinessPartnerRatingGetOrderbyEnum>;
    $select?: Set<ABusinessPartnerRatingGetSelectEnum>;
}

export interface ABusinessPartnerRatingPostRequest {
    aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate: APIBUSINESSPARTNERABusinessPartnerRatingTypeCreate;
}

/**
 * 
 */
export class RatingsApi extends runtime.BaseAPI {

    /**
     * Retrieves business partner ratings of all the available records linked to business partners in the system.
     * Retrieves business partner ratings.
     */
    async aBusinessPartnerBusinessPartnerToBusinessPartnerRatingGetRaw(requestParameters: ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABusinessPartnerRatingType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBusinessPartnerRatingGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerRating`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABusinessPartnerRatingTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner ratings of all the available records linked to business partners in the system.
     * Retrieves business partner ratings.
     */
    async aBusinessPartnerBusinessPartnerToBusinessPartnerRatingGet(requestParameters: ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABusinessPartnerRatingType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBusinessPartnerRatingGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates business partner ratings linked to an existing business partner.
     * Creates business partner ratings.
     */
    async aBusinessPartnerBusinessPartnerToBusinessPartnerRatingPostRaw(requestParameters: ABusinessPartnerBusinessPartnerToBusinessPartnerRatingPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABusinessPartnerRatingType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBusinessPartnerRatingPost.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate was null or undefined when calling aBusinessPartnerBusinessPartnerToBusinessPartnerRatingPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerRating`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABusinessPartnerRatingTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABusinessPartnerRatingTypeFromJSON(jsonValue));
    }

    /**
     * Creates business partner ratings linked to an existing business partner.
     * Creates business partner ratings.
     */
    async aBusinessPartnerBusinessPartnerToBusinessPartnerRatingPost(requestParameters: ABusinessPartnerBusinessPartnerToBusinessPartnerRatingPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABusinessPartnerRatingType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBusinessPartnerRatingPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Deletes a business partner rating identified by business partner number, rating procedure and validity end date.
     * Deletes a business partner rating.
     */
    async aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDeleteRaw(requestParameters: ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDelete.');
        }

        if (requestParameters.businessPartnerRatingProcedure === null || requestParameters.businessPartnerRatingProcedure === undefined) {
            throw new runtime.RequiredError('businessPartnerRatingProcedure','Required parameter requestParameters.businessPartnerRatingProcedure was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDelete.');
        }

        if (requestParameters.bPRatingValidityEndDate === null || requestParameters.bPRatingValidityEndDate === undefined) {
            throw new runtime.RequiredError('bPRatingValidityEndDate','Required parameter requestParameters.bPRatingValidityEndDate was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartnerRating(BusinessPartner='{BusinessPartner}',BusinessPartnerRatingProcedure='{BusinessPartnerRatingProcedure}',BPRatingValidityEndDate={BPRatingValidityEndDate})`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"BusinessPartnerRatingProcedure"}}`, encodeURIComponent(String(requestParameters.businessPartnerRatingProcedure))).replace(`{${"BPRatingValidityEndDate"}}`, encodeURIComponent(String(requestParameters.bPRatingValidityEndDate))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Deletes a business partner rating identified by business partner number, rating procedure and validity end date.
     * Deletes a business partner rating.
     */
    async aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDelete(requestParameters: ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves business partner ratings of all the available records linked to business partners in the system.
     * Retrieves business partner ratings.
     */
    async aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetRaw(requestParameters: ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABusinessPartnerRatingType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGet.');
        }

        if (requestParameters.businessPartnerRatingProcedure === null || requestParameters.businessPartnerRatingProcedure === undefined) {
            throw new runtime.RequiredError('businessPartnerRatingProcedure','Required parameter requestParameters.businessPartnerRatingProcedure was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGet.');
        }

        if (requestParameters.bPRatingValidityEndDate === null || requestParameters.bPRatingValidityEndDate === undefined) {
            throw new runtime.RequiredError('bPRatingValidityEndDate','Required parameter requestParameters.bPRatingValidityEndDate was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartnerRating(BusinessPartner='{BusinessPartner}',BusinessPartnerRatingProcedure='{BusinessPartnerRatingProcedure}',BPRatingValidityEndDate={BPRatingValidityEndDate})`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"BusinessPartnerRatingProcedure"}}`, encodeURIComponent(String(requestParameters.businessPartnerRatingProcedure))).replace(`{${"BPRatingValidityEndDate"}}`, encodeURIComponent(String(requestParameters.bPRatingValidityEndDate))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABusinessPartnerRatingTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner ratings of all the available records linked to business partners in the system.
     * Retrieves business partner ratings.
     */
    async aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGet(requestParameters: ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABusinessPartnerRatingType> {
        const response = await this.aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates a business partner rating identified by business partner number, rating procedure and validity end date.
     * Updates a business partner rating.
     */
    async aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatchRaw(requestParameters: ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatch.');
        }

        if (requestParameters.businessPartnerRatingProcedure === null || requestParameters.businessPartnerRatingProcedure === undefined) {
            throw new runtime.RequiredError('businessPartnerRatingProcedure','Required parameter requestParameters.businessPartnerRatingProcedure was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatch.');
        }

        if (requestParameters.bPRatingValidityEndDate === null || requestParameters.bPRatingValidityEndDate === undefined) {
            throw new runtime.RequiredError('bPRatingValidityEndDate','Required parameter requestParameters.bPRatingValidityEndDate was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatch.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeUpdate === null || requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeUpdate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABusinessPartnerRatingTypeUpdate','Required parameter requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeUpdate was null or undefined when calling aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartnerRating(BusinessPartner='{BusinessPartner}',BusinessPartnerRatingProcedure='{BusinessPartnerRatingProcedure}',BPRatingValidityEndDate={BPRatingValidityEndDate})`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"BusinessPartnerRatingProcedure"}}`, encodeURIComponent(String(requestParameters.businessPartnerRatingProcedure))).replace(`{${"BPRatingValidityEndDate"}}`, encodeURIComponent(String(requestParameters.bPRatingValidityEndDate))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABusinessPartnerRatingTypeUpdateToJSON(requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeUpdate),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Updates a business partner rating identified by business partner number, rating procedure and validity end date.
     * Updates a business partner rating.
     */
    async aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatch(requestParameters: ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDatePatchRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves business partner ratings of all the available records linked to business partners in the system.
     * Retrieves business partner ratings.
     */
    async aBusinessPartnerRatingGetRaw(requestParameters: ABusinessPartnerRatingGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABusinessPartnerRatingType>> {
        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartnerRating`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABusinessPartnerRatingTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner ratings of all the available records linked to business partners in the system.
     * Retrieves business partner ratings.
     */
    async aBusinessPartnerRatingGet(requestParameters: ABusinessPartnerRatingGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABusinessPartnerRatingType> {
        const response = await this.aBusinessPartnerRatingGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates business partner ratings linked to an existing business partner.
     * Creates business partner ratings.
     */
    async aBusinessPartnerRatingPostRaw(requestParameters: ABusinessPartnerRatingPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABusinessPartnerRatingType>> {
        if (requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate was null or undefined when calling aBusinessPartnerRatingPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartnerRating`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABusinessPartnerRatingTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABusinessPartnerRatingTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABusinessPartnerRatingTypeFromJSON(jsonValue));
    }

    /**
     * Creates business partner ratings linked to an existing business partner.
     * Creates business partner ratings.
     */
    async aBusinessPartnerRatingPost(requestParameters: ABusinessPartnerRatingPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABusinessPartnerRatingType> {
        const response = await this.aBusinessPartnerRatingPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetOrderbyEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    BusinessPartnerRatingProcedure: 'BusinessPartnerRatingProcedure',
    BusinessPartnerRatingProcedureDesc: 'BusinessPartnerRatingProcedure desc',
    BpRatingValidityEndDate: 'BPRatingValidityEndDate',
    BpRatingValidityEndDateDesc: 'BPRatingValidityEndDate desc',
    BusinessPartnerRatingGrade: 'BusinessPartnerRatingGrade',
    BusinessPartnerRatingGradeDesc: 'BusinessPartnerRatingGrade desc',
    BusinessPartnerRatingTrend: 'BusinessPartnerRatingTrend',
    BusinessPartnerRatingTrendDesc: 'BusinessPartnerRatingTrend desc',
    BpRatingValidityStartDate: 'BPRatingValidityStartDate',
    BpRatingValidityStartDateDesc: 'BPRatingValidityStartDate desc',
    BpRatingCreationDate: 'BPRatingCreationDate',
    BpRatingCreationDateDesc: 'BPRatingCreationDate desc',
    BusinessPartnerRatingComment: 'BusinessPartnerRatingComment',
    BusinessPartnerRatingCommentDesc: 'BusinessPartnerRatingComment desc',
    BusinessPartnerRatingIsAllowed: 'BusinessPartnerRatingIsAllowed',
    BusinessPartnerRatingIsAllowedDesc: 'BusinessPartnerRatingIsAllowed desc',
    BpRatingIsValidOnKeyDate: 'BPRatingIsValidOnKeyDate',
    BpRatingIsValidOnKeyDateDesc: 'BPRatingIsValidOnKeyDate desc',
    BusinessPartnerRatingKeyDate: 'BusinessPartnerRatingKeyDate',
    BusinessPartnerRatingKeyDateDesc: 'BusinessPartnerRatingKeyDate desc',
    BusinessPartnerRatingIsExpired: 'BusinessPartnerRatingIsExpired',
    BusinessPartnerRatingIsExpiredDesc: 'BusinessPartnerRatingIsExpired desc',
    BpRatingLongComment: 'BPRatingLongComment',
    BpRatingLongCommentDesc: 'BPRatingLongComment desc'
} as const;
export type ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetOrderbyEnum = typeof ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetOrderbyEnum[keyof typeof ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetOrderbyEnum];
/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerRatingProcedure: 'BusinessPartnerRatingProcedure',
    BpRatingValidityEndDate: 'BPRatingValidityEndDate',
    BusinessPartnerRatingGrade: 'BusinessPartnerRatingGrade',
    BusinessPartnerRatingTrend: 'BusinessPartnerRatingTrend',
    BpRatingValidityStartDate: 'BPRatingValidityStartDate',
    BpRatingCreationDate: 'BPRatingCreationDate',
    BusinessPartnerRatingComment: 'BusinessPartnerRatingComment',
    BusinessPartnerRatingIsAllowed: 'BusinessPartnerRatingIsAllowed',
    BpRatingIsValidOnKeyDate: 'BPRatingIsValidOnKeyDate',
    BusinessPartnerRatingKeyDate: 'BusinessPartnerRatingKeyDate',
    BusinessPartnerRatingIsExpired: 'BusinessPartnerRatingIsExpired',
    BpRatingLongComment: 'BPRatingLongComment'
} as const;
export type ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetSelectEnum = typeof ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetSelectEnum[keyof typeof ABusinessPartnerBusinessPartnerToBusinessPartnerRatingGetSelectEnum];
/**
 * @export
 */
export const ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerRatingProcedure: 'BusinessPartnerRatingProcedure',
    BpRatingValidityEndDate: 'BPRatingValidityEndDate',
    BusinessPartnerRatingGrade: 'BusinessPartnerRatingGrade',
    BusinessPartnerRatingTrend: 'BusinessPartnerRatingTrend',
    BpRatingValidityStartDate: 'BPRatingValidityStartDate',
    BpRatingCreationDate: 'BPRatingCreationDate',
    BusinessPartnerRatingComment: 'BusinessPartnerRatingComment',
    BusinessPartnerRatingIsAllowed: 'BusinessPartnerRatingIsAllowed',
    BpRatingIsValidOnKeyDate: 'BPRatingIsValidOnKeyDate',
    BusinessPartnerRatingKeyDate: 'BusinessPartnerRatingKeyDate',
    BusinessPartnerRatingIsExpired: 'BusinessPartnerRatingIsExpired',
    BpRatingLongComment: 'BPRatingLongComment'
} as const;
export type ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetSelectEnum = typeof ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetSelectEnum[keyof typeof ABusinessPartnerRatingBusinessPartnerBusinessPartnerBusinessPartnerRatingProcedureBusinessPartnerRatingProcedureBPRatingValidityEndDateBPRatingValidityEndDateGetSelectEnum];
/**
 * @export
 */
export const ABusinessPartnerRatingGetOrderbyEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    BusinessPartnerRatingProcedure: 'BusinessPartnerRatingProcedure',
    BusinessPartnerRatingProcedureDesc: 'BusinessPartnerRatingProcedure desc',
    BpRatingValidityEndDate: 'BPRatingValidityEndDate',
    BpRatingValidityEndDateDesc: 'BPRatingValidityEndDate desc',
    BusinessPartnerRatingGrade: 'BusinessPartnerRatingGrade',
    BusinessPartnerRatingGradeDesc: 'BusinessPartnerRatingGrade desc',
    BusinessPartnerRatingTrend: 'BusinessPartnerRatingTrend',
    BusinessPartnerRatingTrendDesc: 'BusinessPartnerRatingTrend desc',
    BpRatingValidityStartDate: 'BPRatingValidityStartDate',
    BpRatingValidityStartDateDesc: 'BPRatingValidityStartDate desc',
    BpRatingCreationDate: 'BPRatingCreationDate',
    BpRatingCreationDateDesc: 'BPRatingCreationDate desc',
    BusinessPartnerRatingComment: 'BusinessPartnerRatingComment',
    BusinessPartnerRatingCommentDesc: 'BusinessPartnerRatingComment desc',
    BusinessPartnerRatingIsAllowed: 'BusinessPartnerRatingIsAllowed',
    BusinessPartnerRatingIsAllowedDesc: 'BusinessPartnerRatingIsAllowed desc',
    BpRatingIsValidOnKeyDate: 'BPRatingIsValidOnKeyDate',
    BpRatingIsValidOnKeyDateDesc: 'BPRatingIsValidOnKeyDate desc',
    BusinessPartnerRatingKeyDate: 'BusinessPartnerRatingKeyDate',
    BusinessPartnerRatingKeyDateDesc: 'BusinessPartnerRatingKeyDate desc',
    BusinessPartnerRatingIsExpired: 'BusinessPartnerRatingIsExpired',
    BusinessPartnerRatingIsExpiredDesc: 'BusinessPartnerRatingIsExpired desc',
    BpRatingLongComment: 'BPRatingLongComment',
    BpRatingLongCommentDesc: 'BPRatingLongComment desc'
} as const;
export type ABusinessPartnerRatingGetOrderbyEnum = typeof ABusinessPartnerRatingGetOrderbyEnum[keyof typeof ABusinessPartnerRatingGetOrderbyEnum];
/**
 * @export
 */
export const ABusinessPartnerRatingGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerRatingProcedure: 'BusinessPartnerRatingProcedure',
    BpRatingValidityEndDate: 'BPRatingValidityEndDate',
    BusinessPartnerRatingGrade: 'BusinessPartnerRatingGrade',
    BusinessPartnerRatingTrend: 'BusinessPartnerRatingTrend',
    BpRatingValidityStartDate: 'BPRatingValidityStartDate',
    BpRatingCreationDate: 'BPRatingCreationDate',
    BusinessPartnerRatingComment: 'BusinessPartnerRatingComment',
    BusinessPartnerRatingIsAllowed: 'BusinessPartnerRatingIsAllowed',
    BpRatingIsValidOnKeyDate: 'BPRatingIsValidOnKeyDate',
    BusinessPartnerRatingKeyDate: 'BusinessPartnerRatingKeyDate',
    BusinessPartnerRatingIsExpired: 'BusinessPartnerRatingIsExpired',
    BpRatingLongComment: 'BPRatingLongComment'
} as const;
export type ABusinessPartnerRatingGetSelectEnum = typeof ABusinessPartnerRatingGetSelectEnum[keyof typeof ABusinessPartnerRatingGetSelectEnum];
