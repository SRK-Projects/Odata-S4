/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  APIBUSINESSPARTNERABPFinancialServicesExtnType,
  APIBUSINESSPARTNERABPFinancialServicesExtnTypeCreate,
  APIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdate,
  CollectionOfABPFinancialServicesExtnType,
  ModelError,
} from '../models/index';
import {
    APIBUSINESSPARTNERABPFinancialServicesExtnTypeFromJSON,
    APIBUSINESSPARTNERABPFinancialServicesExtnTypeToJSON,
    APIBUSINESSPARTNERABPFinancialServicesExtnTypeCreateFromJSON,
    APIBUSINESSPARTNERABPFinancialServicesExtnTypeCreateToJSON,
    APIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdateFromJSON,
    APIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdateToJSON,
    CollectionOfABPFinancialServicesExtnTypeFromJSON,
    CollectionOfABPFinancialServicesExtnTypeToJSON,
    ModelErrorFromJSON,
    ModelErrorToJSON,
} from '../models/index';

export interface ABPFinancialServicesExtnBusinessPartnerGetRequest {
    businessPartner: string;
    $select?: Set<ABPFinancialServicesExtnBusinessPartnerGetSelectEnum>;
}

export interface ABPFinancialServicesExtnBusinessPartnerPatchRequest {
    businessPartner: string;
    aPIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdate: APIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdate;
}

export interface ABPFinancialServicesExtnGetRequest {
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABPFinancialServicesExtnGetOrderbyEnum>;
    $select?: Set<ABPFinancialServicesExtnGetSelectEnum>;
}

export interface ABPFinancialServicesExtnPostRequest {
    aPIBUSINESSPARTNERABPFinancialServicesExtnTypeCreate: APIBUSINESSPARTNERABPFinancialServicesExtnTypeCreate;
}

export interface ABusinessPartnerBusinessPartnerToBusinessPartnerGetRequest {
    businessPartner: string;
    $select?: Set<ABusinessPartnerBusinessPartnerToBusinessPartnerGetSelectEnum>;
}

/**
 * 
 */
export class FinancialServicesDetailsApi extends runtime.BaseAPI {

    /**
     * Retrieves financial services business partner attributes of all the available records linked to business partners in the system.
     * Retrieves financial services business partner attributes.
     */
    async aBPFinancialServicesExtnBusinessPartnerGetRaw(requestParameters: ABPFinancialServicesExtnBusinessPartnerGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABPFinancialServicesExtnType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBPFinancialServicesExtnBusinessPartnerGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BPFinancialServicesExtn('{BusinessPartner}')`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABPFinancialServicesExtnTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves financial services business partner attributes of all the available records linked to business partners in the system.
     * Retrieves financial services business partner attributes.
     */
    async aBPFinancialServicesExtnBusinessPartnerGet(requestParameters: ABPFinancialServicesExtnBusinessPartnerGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABPFinancialServicesExtnType> {
        const response = await this.aBPFinancialServicesExtnBusinessPartnerGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates financial services business partner attributes identified by business partner number.
     * Updates financial services business partner attributes.
     */
    async aBPFinancialServicesExtnBusinessPartnerPatchRaw(requestParameters: ABPFinancialServicesExtnBusinessPartnerPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBPFinancialServicesExtnBusinessPartnerPatch.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdate === null || requestParameters.aPIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdate','Required parameter requestParameters.aPIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdate was null or undefined when calling aBPFinancialServicesExtnBusinessPartnerPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BPFinancialServicesExtn('{BusinessPartner}')`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdateToJSON(requestParameters.aPIBUSINESSPARTNERABPFinancialServicesExtnTypeUpdate),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Updates financial services business partner attributes identified by business partner number.
     * Updates financial services business partner attributes.
     */
    async aBPFinancialServicesExtnBusinessPartnerPatch(requestParameters: ABPFinancialServicesExtnBusinessPartnerPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBPFinancialServicesExtnBusinessPartnerPatchRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves financial services business partner attributes of all the available records linked to business partners in the system.
     * Retrieves financial services business partner attributes.
     */
    async aBPFinancialServicesExtnGetRaw(requestParameters: ABPFinancialServicesExtnGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABPFinancialServicesExtnType>> {
        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BPFinancialServicesExtn`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABPFinancialServicesExtnTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves financial services business partner attributes of all the available records linked to business partners in the system.
     * Retrieves financial services business partner attributes.
     */
    async aBPFinancialServicesExtnGet(requestParameters: ABPFinancialServicesExtnGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABPFinancialServicesExtnType> {
        const response = await this.aBPFinancialServicesExtnGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates financial services business partner attributes linked to an existing business partner.
     * Creates financial services business partner attributes.
     */
    async aBPFinancialServicesExtnPostRaw(requestParameters: ABPFinancialServicesExtnPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABPFinancialServicesExtnType>> {
        if (requestParameters.aPIBUSINESSPARTNERABPFinancialServicesExtnTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABPFinancialServicesExtnTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABPFinancialServicesExtnTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABPFinancialServicesExtnTypeCreate was null or undefined when calling aBPFinancialServicesExtnPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BPFinancialServicesExtn`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABPFinancialServicesExtnTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABPFinancialServicesExtnTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABPFinancialServicesExtnTypeFromJSON(jsonValue));
    }

    /**
     * Creates financial services business partner attributes linked to an existing business partner.
     * Creates financial services business partner attributes.
     */
    async aBPFinancialServicesExtnPost(requestParameters: ABPFinancialServicesExtnPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABPFinancialServicesExtnType> {
        const response = await this.aBPFinancialServicesExtnPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves financial services business partner attributes of all the available records linked to business partners in the system.
     * Retrieves financial services business partner attributes.
     */
    async aBusinessPartnerBusinessPartnerToBusinessPartnerGetRaw(requestParameters: ABusinessPartnerBusinessPartnerToBusinessPartnerGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABPFinancialServicesExtnType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBusinessPartnerGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartner`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABPFinancialServicesExtnTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves financial services business partner attributes of all the available records linked to business partners in the system.
     * Retrieves financial services business partner attributes.
     */
    async aBusinessPartnerBusinessPartnerToBusinessPartnerGet(requestParameters: ABusinessPartnerBusinessPartnerToBusinessPartnerGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABPFinancialServicesExtnType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBusinessPartnerGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ABPFinancialServicesExtnBusinessPartnerGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerIsVip: 'BusinessPartnerIsVIP',
    TradingPartner: 'TradingPartner',
    FactoryCalendar: 'FactoryCalendar',
    BusinessPartnerOfficeCountry: 'BusinessPartnerOfficeCountry',
    BusinessPartnerOfficeRegion: 'BusinessPartnerOfficeRegion',
    BpRegisteredOfficeName: 'BPRegisteredOfficeName',
    BpBalanceSheetCurrency: 'BPBalanceSheetCurrency',
    BpLastCptlIncrAmtInBalShtCrcy: 'BPLastCptlIncrAmtInBalShtCrcy',
    BpLastCapitalIncreaseYear: 'BPLastCapitalIncreaseYear',
    BpBalanceSheetDisplayType: 'BPBalanceSheetDisplayType',
    BusinessPartnerCitizenship: 'BusinessPartnerCitizenship',
    BpMaritalPropertyRegime: 'BPMaritalPropertyRegime',
    BusinessPartnerIncomeCurrency: 'BusinessPartnerIncomeCurrency',
    BpNumberOfChildren: 'BPNumberOfChildren',
    BpNumberOfHouseholdMembers: 'BPNumberOfHouseholdMembers',
    BpAnnualNetIncAmtInIncomeCrcy: 'BPAnnualNetIncAmtInIncomeCrcy',
    BpMonthlyNetIncAmtInIncomeCrcy: 'BPMonthlyNetIncAmtInIncomeCrcy',
    BpAnnualNetIncomeYear: 'BPAnnualNetIncomeYear',
    BpMonthlyNetIncomeMonth: 'BPMonthlyNetIncomeMonth',
    BpMonthlyNetIncomeYear: 'BPMonthlyNetIncomeYear',
    BpPlaceOfDeathName: 'BPPlaceOfDeathName',
    CustomerIsUnwanted: 'CustomerIsUnwanted',
    UndesirabilityReason: 'UndesirabilityReason',
    UndesirabilityComment: 'UndesirabilityComment',
    LastCustomerContactDate: 'LastCustomerContactDate',
    BpGroupingCharacter: 'BPGroupingCharacter',
    BpLetterSalutation: 'BPLetterSalutation',
    BusinessPartnerTargetGroup: 'BusinessPartnerTargetGroup',
    BusinessPartnerEmployeeGroup: 'BusinessPartnerEmployeeGroup',
    BusinessPartnerIsEmployee: 'BusinessPartnerIsEmployee',
    BpTermnBusRelationsBankDate: 'BPTermnBusRelationsBankDate'
} as const;
export type ABPFinancialServicesExtnBusinessPartnerGetSelectEnum = typeof ABPFinancialServicesExtnBusinessPartnerGetSelectEnum[keyof typeof ABPFinancialServicesExtnBusinessPartnerGetSelectEnum];
/**
 * @export
 */
export const ABPFinancialServicesExtnGetOrderbyEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    BusinessPartnerIsVip: 'BusinessPartnerIsVIP',
    BusinessPartnerIsVipDesc: 'BusinessPartnerIsVIP desc',
    TradingPartner: 'TradingPartner',
    TradingPartnerDesc: 'TradingPartner desc',
    FactoryCalendar: 'FactoryCalendar',
    FactoryCalendarDesc: 'FactoryCalendar desc',
    BusinessPartnerOfficeCountry: 'BusinessPartnerOfficeCountry',
    BusinessPartnerOfficeCountryDesc: 'BusinessPartnerOfficeCountry desc',
    BusinessPartnerOfficeRegion: 'BusinessPartnerOfficeRegion',
    BusinessPartnerOfficeRegionDesc: 'BusinessPartnerOfficeRegion desc',
    BpRegisteredOfficeName: 'BPRegisteredOfficeName',
    BpRegisteredOfficeNameDesc: 'BPRegisteredOfficeName desc',
    BpBalanceSheetCurrency: 'BPBalanceSheetCurrency',
    BpBalanceSheetCurrencyDesc: 'BPBalanceSheetCurrency desc',
    BpLastCptlIncrAmtInBalShtCrcy: 'BPLastCptlIncrAmtInBalShtCrcy',
    BpLastCptlIncrAmtInBalShtCrcyDesc: 'BPLastCptlIncrAmtInBalShtCrcy desc',
    BpLastCapitalIncreaseYear: 'BPLastCapitalIncreaseYear',
    BpLastCapitalIncreaseYearDesc: 'BPLastCapitalIncreaseYear desc',
    BpBalanceSheetDisplayType: 'BPBalanceSheetDisplayType',
    BpBalanceSheetDisplayTypeDesc: 'BPBalanceSheetDisplayType desc',
    BusinessPartnerCitizenship: 'BusinessPartnerCitizenship',
    BusinessPartnerCitizenshipDesc: 'BusinessPartnerCitizenship desc',
    BpMaritalPropertyRegime: 'BPMaritalPropertyRegime',
    BpMaritalPropertyRegimeDesc: 'BPMaritalPropertyRegime desc',
    BusinessPartnerIncomeCurrency: 'BusinessPartnerIncomeCurrency',
    BusinessPartnerIncomeCurrencyDesc: 'BusinessPartnerIncomeCurrency desc',
    BpNumberOfChildren: 'BPNumberOfChildren',
    BpNumberOfChildrenDesc: 'BPNumberOfChildren desc',
    BpNumberOfHouseholdMembers: 'BPNumberOfHouseholdMembers',
    BpNumberOfHouseholdMembersDesc: 'BPNumberOfHouseholdMembers desc',
    BpAnnualNetIncAmtInIncomeCrcy: 'BPAnnualNetIncAmtInIncomeCrcy',
    BpAnnualNetIncAmtInIncomeCrcyDesc: 'BPAnnualNetIncAmtInIncomeCrcy desc',
    BpMonthlyNetIncAmtInIncomeCrcy: 'BPMonthlyNetIncAmtInIncomeCrcy',
    BpMonthlyNetIncAmtInIncomeCrcyDesc: 'BPMonthlyNetIncAmtInIncomeCrcy desc',
    BpAnnualNetIncomeYear: 'BPAnnualNetIncomeYear',
    BpAnnualNetIncomeYearDesc: 'BPAnnualNetIncomeYear desc',
    BpMonthlyNetIncomeMonth: 'BPMonthlyNetIncomeMonth',
    BpMonthlyNetIncomeMonthDesc: 'BPMonthlyNetIncomeMonth desc',
    BpMonthlyNetIncomeYear: 'BPMonthlyNetIncomeYear',
    BpMonthlyNetIncomeYearDesc: 'BPMonthlyNetIncomeYear desc',
    BpPlaceOfDeathName: 'BPPlaceOfDeathName',
    BpPlaceOfDeathNameDesc: 'BPPlaceOfDeathName desc',
    CustomerIsUnwanted: 'CustomerIsUnwanted',
    CustomerIsUnwantedDesc: 'CustomerIsUnwanted desc',
    UndesirabilityReason: 'UndesirabilityReason',
    UndesirabilityReasonDesc: 'UndesirabilityReason desc',
    UndesirabilityComment: 'UndesirabilityComment',
    UndesirabilityCommentDesc: 'UndesirabilityComment desc',
    LastCustomerContactDate: 'LastCustomerContactDate',
    LastCustomerContactDateDesc: 'LastCustomerContactDate desc',
    BpGroupingCharacter: 'BPGroupingCharacter',
    BpGroupingCharacterDesc: 'BPGroupingCharacter desc',
    BpLetterSalutation: 'BPLetterSalutation',
    BpLetterSalutationDesc: 'BPLetterSalutation desc',
    BusinessPartnerTargetGroup: 'BusinessPartnerTargetGroup',
    BusinessPartnerTargetGroupDesc: 'BusinessPartnerTargetGroup desc',
    BusinessPartnerEmployeeGroup: 'BusinessPartnerEmployeeGroup',
    BusinessPartnerEmployeeGroupDesc: 'BusinessPartnerEmployeeGroup desc',
    BusinessPartnerIsEmployee: 'BusinessPartnerIsEmployee',
    BusinessPartnerIsEmployeeDesc: 'BusinessPartnerIsEmployee desc',
    BpTermnBusRelationsBankDate: 'BPTermnBusRelationsBankDate',
    BpTermnBusRelationsBankDateDesc: 'BPTermnBusRelationsBankDate desc'
} as const;
export type ABPFinancialServicesExtnGetOrderbyEnum = typeof ABPFinancialServicesExtnGetOrderbyEnum[keyof typeof ABPFinancialServicesExtnGetOrderbyEnum];
/**
 * @export
 */
export const ABPFinancialServicesExtnGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerIsVip: 'BusinessPartnerIsVIP',
    TradingPartner: 'TradingPartner',
    FactoryCalendar: 'FactoryCalendar',
    BusinessPartnerOfficeCountry: 'BusinessPartnerOfficeCountry',
    BusinessPartnerOfficeRegion: 'BusinessPartnerOfficeRegion',
    BpRegisteredOfficeName: 'BPRegisteredOfficeName',
    BpBalanceSheetCurrency: 'BPBalanceSheetCurrency',
    BpLastCptlIncrAmtInBalShtCrcy: 'BPLastCptlIncrAmtInBalShtCrcy',
    BpLastCapitalIncreaseYear: 'BPLastCapitalIncreaseYear',
    BpBalanceSheetDisplayType: 'BPBalanceSheetDisplayType',
    BusinessPartnerCitizenship: 'BusinessPartnerCitizenship',
    BpMaritalPropertyRegime: 'BPMaritalPropertyRegime',
    BusinessPartnerIncomeCurrency: 'BusinessPartnerIncomeCurrency',
    BpNumberOfChildren: 'BPNumberOfChildren',
    BpNumberOfHouseholdMembers: 'BPNumberOfHouseholdMembers',
    BpAnnualNetIncAmtInIncomeCrcy: 'BPAnnualNetIncAmtInIncomeCrcy',
    BpMonthlyNetIncAmtInIncomeCrcy: 'BPMonthlyNetIncAmtInIncomeCrcy',
    BpAnnualNetIncomeYear: 'BPAnnualNetIncomeYear',
    BpMonthlyNetIncomeMonth: 'BPMonthlyNetIncomeMonth',
    BpMonthlyNetIncomeYear: 'BPMonthlyNetIncomeYear',
    BpPlaceOfDeathName: 'BPPlaceOfDeathName',
    CustomerIsUnwanted: 'CustomerIsUnwanted',
    UndesirabilityReason: 'UndesirabilityReason',
    UndesirabilityComment: 'UndesirabilityComment',
    LastCustomerContactDate: 'LastCustomerContactDate',
    BpGroupingCharacter: 'BPGroupingCharacter',
    BpLetterSalutation: 'BPLetterSalutation',
    BusinessPartnerTargetGroup: 'BusinessPartnerTargetGroup',
    BusinessPartnerEmployeeGroup: 'BusinessPartnerEmployeeGroup',
    BusinessPartnerIsEmployee: 'BusinessPartnerIsEmployee',
    BpTermnBusRelationsBankDate: 'BPTermnBusRelationsBankDate'
} as const;
export type ABPFinancialServicesExtnGetSelectEnum = typeof ABPFinancialServicesExtnGetSelectEnum[keyof typeof ABPFinancialServicesExtnGetSelectEnum];
/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBusinessPartnerGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerIsVip: 'BusinessPartnerIsVIP',
    TradingPartner: 'TradingPartner',
    FactoryCalendar: 'FactoryCalendar',
    BusinessPartnerOfficeCountry: 'BusinessPartnerOfficeCountry',
    BusinessPartnerOfficeRegion: 'BusinessPartnerOfficeRegion',
    BpRegisteredOfficeName: 'BPRegisteredOfficeName',
    BpBalanceSheetCurrency: 'BPBalanceSheetCurrency',
    BpLastCptlIncrAmtInBalShtCrcy: 'BPLastCptlIncrAmtInBalShtCrcy',
    BpLastCapitalIncreaseYear: 'BPLastCapitalIncreaseYear',
    BpBalanceSheetDisplayType: 'BPBalanceSheetDisplayType',
    BusinessPartnerCitizenship: 'BusinessPartnerCitizenship',
    BpMaritalPropertyRegime: 'BPMaritalPropertyRegime',
    BusinessPartnerIncomeCurrency: 'BusinessPartnerIncomeCurrency',
    BpNumberOfChildren: 'BPNumberOfChildren',
    BpNumberOfHouseholdMembers: 'BPNumberOfHouseholdMembers',
    BpAnnualNetIncAmtInIncomeCrcy: 'BPAnnualNetIncAmtInIncomeCrcy',
    BpMonthlyNetIncAmtInIncomeCrcy: 'BPMonthlyNetIncAmtInIncomeCrcy',
    BpAnnualNetIncomeYear: 'BPAnnualNetIncomeYear',
    BpMonthlyNetIncomeMonth: 'BPMonthlyNetIncomeMonth',
    BpMonthlyNetIncomeYear: 'BPMonthlyNetIncomeYear',
    BpPlaceOfDeathName: 'BPPlaceOfDeathName',
    CustomerIsUnwanted: 'CustomerIsUnwanted',
    UndesirabilityReason: 'UndesirabilityReason',
    UndesirabilityComment: 'UndesirabilityComment',
    LastCustomerContactDate: 'LastCustomerContactDate',
    BpGroupingCharacter: 'BPGroupingCharacter',
    BpLetterSalutation: 'BPLetterSalutation',
    BusinessPartnerTargetGroup: 'BusinessPartnerTargetGroup',
    BusinessPartnerEmployeeGroup: 'BusinessPartnerEmployeeGroup',
    BusinessPartnerIsEmployee: 'BusinessPartnerIsEmployee',
    BpTermnBusRelationsBankDate: 'BPTermnBusRelationsBankDate'
} as const;
export type ABusinessPartnerBusinessPartnerToBusinessPartnerGetSelectEnum = typeof ABusinessPartnerBusinessPartnerToBusinessPartnerGetSelectEnum[keyof typeof ABusinessPartnerBusinessPartnerToBusinessPartnerGetSelectEnum];
