/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrType,
  APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate,
  APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdate,
  CollectionOfABusPartAddrDepdntTaxNmbrType,
  ModelError,
} from '../models/index';
import {
    APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeFromJSON,
    APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeToJSON,
    APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreateFromJSON,
    APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreateToJSON,
    APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdateFromJSON,
    APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdateToJSON,
    CollectionOfABusPartAddrDepdntTaxNmbrTypeFromJSON,
    CollectionOfABusPartAddrDepdntTaxNmbrTypeToJSON,
    ModelErrorFromJSON,
    ModelErrorToJSON,
} from '../models/index';

export interface ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDeleteRequest {
    businessPartner: string;
    addressID: string;
    bPTaxType: string;
}

export interface ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetRequest {
    businessPartner: string;
    addressID: string;
    bPTaxType: string;
    $select?: Set<ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetSelectEnum>;
}

export interface ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatchRequest {
    businessPartner: string;
    addressID: string;
    bPTaxType: string;
    aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdate: APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdate;
}

export interface ABusPartAddrDepdntTaxNmbrGetRequest {
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABusPartAddrDepdntTaxNmbrGetOrderbyEnum>;
    $select?: Set<ABusPartAddrDepdntTaxNmbrGetSelectEnum>;
}

export interface ABusPartAddrDepdntTaxNmbrPostRequest {
    aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate: APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate;
}

export interface ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetRequest {
    businessPartner: string;
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetOrderbyEnum>;
    $select?: Set<ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetSelectEnum>;
}

export interface ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrPostRequest {
    businessPartner: string;
    aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate: APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate;
}

/**
 * 
 */
export class BusinessPartnerAddressDependentTaxNumbersApi extends runtime.BaseAPI {

    /**
     * Deletes address dependent tax number data identified by key fields such as business partner number and tax type.
     * Deletes address dependent tax number data linked to a business partner.
     */
    async aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDeleteRaw(requestParameters: ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDelete.');
        }

        if (requestParameters.addressID === null || requestParameters.addressID === undefined) {
            throw new runtime.RequiredError('addressID','Required parameter requestParameters.addressID was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDelete.');
        }

        if (requestParameters.bPTaxType === null || requestParameters.bPTaxType === undefined) {
            throw new runtime.RequiredError('bPTaxType','Required parameter requestParameters.bPTaxType was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusPartAddrDepdntTaxNmbr(BusinessPartner='{BusinessPartner}',AddressID='{AddressID}',BPTaxType='{BPTaxType}')`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"AddressID"}}`, encodeURIComponent(String(requestParameters.addressID))).replace(`{${"BPTaxType"}}`, encodeURIComponent(String(requestParameters.bPTaxType))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Deletes address dependent tax number data identified by key fields such as business partner number and tax type.
     * Deletes address dependent tax number data linked to a business partner.
     */
    async aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDelete(requestParameters: ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves address dependent tax number data by using the key fields business partner number, address ID  and tax type.
     * Retrieves address dependent business partner tax number data by using key fields.
     */
    async aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetRaw(requestParameters: ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGet.');
        }

        if (requestParameters.addressID === null || requestParameters.addressID === undefined) {
            throw new runtime.RequiredError('addressID','Required parameter requestParameters.addressID was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGet.');
        }

        if (requestParameters.bPTaxType === null || requestParameters.bPTaxType === undefined) {
            throw new runtime.RequiredError('bPTaxType','Required parameter requestParameters.bPTaxType was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusPartAddrDepdntTaxNmbr(BusinessPartner='{BusinessPartner}',AddressID='{AddressID}',BPTaxType='{BPTaxType}')`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"AddressID"}}`, encodeURIComponent(String(requestParameters.addressID))).replace(`{${"BPTaxType"}}`, encodeURIComponent(String(requestParameters.bPTaxType))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves address dependent tax number data by using the key fields business partner number, address ID  and tax type.
     * Retrieves address dependent business partner tax number data by using key fields.
     */
    async aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGet(requestParameters: ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrType> {
        const response = await this.aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates address dependent tax number data identified by key fields business partner number, address ID and tax type.
     * Updates address dependent tax number data linked to a business partner.
     */
    async aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatchRaw(requestParameters: ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatch.');
        }

        if (requestParameters.addressID === null || requestParameters.addressID === undefined) {
            throw new runtime.RequiredError('addressID','Required parameter requestParameters.addressID was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatch.');
        }

        if (requestParameters.bPTaxType === null || requestParameters.bPTaxType === undefined) {
            throw new runtime.RequiredError('bPTaxType','Required parameter requestParameters.bPTaxType was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatch.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdate === null || requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdate','Required parameter requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdate was null or undefined when calling aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusPartAddrDepdntTaxNmbr(BusinessPartner='{BusinessPartner}',AddressID='{AddressID}',BPTaxType='{BPTaxType}')`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"AddressID"}}`, encodeURIComponent(String(requestParameters.addressID))).replace(`{${"BPTaxType"}}`, encodeURIComponent(String(requestParameters.bPTaxType))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdateToJSON(requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeUpdate),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Updates address dependent tax number data identified by key fields business partner number, address ID and tax type.
     * Updates address dependent tax number data linked to a business partner.
     */
    async aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatch(requestParameters: ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypePatchRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves address dependent tax number data of all the available records linked to business partners in the system.
     * Retrieves address dependent business partner tax number data.
     */
    async aBusPartAddrDepdntTaxNmbrGetRaw(requestParameters: ABusPartAddrDepdntTaxNmbrGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABusPartAddrDepdntTaxNmbrType>> {
        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusPartAddrDepdntTaxNmbr`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABusPartAddrDepdntTaxNmbrTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves address dependent tax number data of all the available records linked to business partners in the system.
     * Retrieves address dependent business partner tax number data.
     */
    async aBusPartAddrDepdntTaxNmbrGet(requestParameters: ABusPartAddrDepdntTaxNmbrGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABusPartAddrDepdntTaxNmbrType> {
        const response = await this.aBusPartAddrDepdntTaxNmbrGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates new address dependent tax number data linked to an existing business partner.
     * Creates new address dependent tax number data.
     */
    async aBusPartAddrDepdntTaxNmbrPostRaw(requestParameters: ABusPartAddrDepdntTaxNmbrPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrType>> {
        if (requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate was null or undefined when calling aBusPartAddrDepdntTaxNmbrPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusPartAddrDepdntTaxNmbr`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeFromJSON(jsonValue));
    }

    /**
     * Creates new address dependent tax number data linked to an existing business partner.
     * Creates new address dependent tax number data.
     */
    async aBusPartAddrDepdntTaxNmbrPost(requestParameters: ABusPartAddrDepdntTaxNmbrPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrType> {
        const response = await this.aBusPartAddrDepdntTaxNmbrPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves address dependent tax number data of all the available records linked to business partners in the system.
     * Retrieves address dependent business partner tax number data.
     */
    async aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetRaw(requestParameters: ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABusPartAddrDepdntTaxNmbrType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BusPartAddrDepdntTaxNmbr`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABusPartAddrDepdntTaxNmbrTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves address dependent tax number data of all the available records linked to business partners in the system.
     * Retrieves address dependent business partner tax number data.
     */
    async aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGet(requestParameters: ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABusPartAddrDepdntTaxNmbrType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates new address dependent tax number data linked to an existing business partner.
     * Creates new address dependent tax number data.
     */
    async aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrPostRaw(requestParameters: ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrPost.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate was null or undefined when calling aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BusPartAddrDepdntTaxNmbr`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrTypeFromJSON(jsonValue));
    }

    /**
     * Creates new address dependent tax number data linked to an existing business partner.
     * Creates new address dependent tax number data.
     */
    async aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrPost(requestParameters: ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABusPartAddrDepdntTaxNmbrType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    AddressId: 'AddressID',
    BpTaxType: 'BPTaxType',
    BpTaxNumber: 'BPTaxNumber',
    BpTaxLongNumber: 'BPTaxLongNumber',
    AuthorizationGroup: 'AuthorizationGroup'
} as const;
export type ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetSelectEnum = typeof ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetSelectEnum[keyof typeof ABusPartAddrDepdntTaxNmbrBusinessPartnerBusinessPartnerAddressIDAddressIDBPTaxTypeBPTaxTypeGetSelectEnum];
/**
 * @export
 */
export const ABusPartAddrDepdntTaxNmbrGetOrderbyEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    AddressId: 'AddressID',
    AddressIdDesc: 'AddressID desc',
    BpTaxType: 'BPTaxType',
    BpTaxTypeDesc: 'BPTaxType desc',
    BpTaxNumber: 'BPTaxNumber',
    BpTaxNumberDesc: 'BPTaxNumber desc',
    BpTaxLongNumber: 'BPTaxLongNumber',
    BpTaxLongNumberDesc: 'BPTaxLongNumber desc',
    AuthorizationGroup: 'AuthorizationGroup',
    AuthorizationGroupDesc: 'AuthorizationGroup desc'
} as const;
export type ABusPartAddrDepdntTaxNmbrGetOrderbyEnum = typeof ABusPartAddrDepdntTaxNmbrGetOrderbyEnum[keyof typeof ABusPartAddrDepdntTaxNmbrGetOrderbyEnum];
/**
 * @export
 */
export const ABusPartAddrDepdntTaxNmbrGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    AddressId: 'AddressID',
    BpTaxType: 'BPTaxType',
    BpTaxNumber: 'BPTaxNumber',
    BpTaxLongNumber: 'BPTaxLongNumber',
    AuthorizationGroup: 'AuthorizationGroup'
} as const;
export type ABusPartAddrDepdntTaxNmbrGetSelectEnum = typeof ABusPartAddrDepdntTaxNmbrGetSelectEnum[keyof typeof ABusPartAddrDepdntTaxNmbrGetSelectEnum];
/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetOrderbyEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    AddressId: 'AddressID',
    AddressIdDesc: 'AddressID desc',
    BpTaxType: 'BPTaxType',
    BpTaxTypeDesc: 'BPTaxType desc',
    BpTaxNumber: 'BPTaxNumber',
    BpTaxNumberDesc: 'BPTaxNumber desc',
    BpTaxLongNumber: 'BPTaxLongNumber',
    BpTaxLongNumberDesc: 'BPTaxLongNumber desc',
    AuthorizationGroup: 'AuthorizationGroup',
    AuthorizationGroupDesc: 'AuthorizationGroup desc'
} as const;
export type ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetOrderbyEnum = typeof ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetOrderbyEnum[keyof typeof ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetOrderbyEnum];
/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    AddressId: 'AddressID',
    BpTaxType: 'BPTaxType',
    BpTaxNumber: 'BPTaxNumber',
    BpTaxLongNumber: 'BPTaxLongNumber',
    AuthorizationGroup: 'AuthorizationGroup'
} as const;
export type ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetSelectEnum = typeof ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetSelectEnum[keyof typeof ABusinessPartnerBusinessPartnerToBusPartAddrDepdntTaxNmbrGetSelectEnum];
