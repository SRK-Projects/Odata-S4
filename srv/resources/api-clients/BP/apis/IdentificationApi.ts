/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  APIBUSINESSPARTNERABuPaIdentificationType,
  APIBUSINESSPARTNERABuPaIdentificationTypeCreate,
  APIBUSINESSPARTNERABuPaIdentificationTypeUpdate,
  CollectionOfABuPaIdentificationType,
  ModelError,
} from '../models/index';
import {
    APIBUSINESSPARTNERABuPaIdentificationTypeFromJSON,
    APIBUSINESSPARTNERABuPaIdentificationTypeToJSON,
    APIBUSINESSPARTNERABuPaIdentificationTypeCreateFromJSON,
    APIBUSINESSPARTNERABuPaIdentificationTypeCreateToJSON,
    APIBUSINESSPARTNERABuPaIdentificationTypeUpdateFromJSON,
    APIBUSINESSPARTNERABuPaIdentificationTypeUpdateToJSON,
    CollectionOfABuPaIdentificationTypeFromJSON,
    CollectionOfABuPaIdentificationTypeToJSON,
    ModelErrorFromJSON,
    ModelErrorToJSON,
} from '../models/index';

export interface ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteRequest {
    businessPartner: string;
    bPIdentificationType: string;
    bPIdentificationNumber: string;
}

export interface ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetRequest {
    businessPartner: string;
    bPIdentificationType: string;
    bPIdentificationNumber: string;
    $select?: Set<ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetSelectEnum>;
}

export interface ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchRequest {
    businessPartner: string;
    bPIdentificationType: string;
    bPIdentificationNumber: string;
    aPIBUSINESSPARTNERABuPaIdentificationTypeUpdate: APIBUSINESSPARTNERABuPaIdentificationTypeUpdate;
}

export interface ABuPaIdentificationGetRequest {
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABuPaIdentificationGetOrderbyEnum>;
    $select?: Set<ABuPaIdentificationGetSelectEnum>;
}

export interface ABuPaIdentificationPostRequest {
    aPIBUSINESSPARTNERABuPaIdentificationTypeCreate: APIBUSINESSPARTNERABuPaIdentificationTypeCreate;
}

export interface ABusinessPartnerBusinessPartnerToBuPaIdentificationGetRequest {
    businessPartner: string;
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABusinessPartnerBusinessPartnerToBuPaIdentificationGetOrderbyEnum>;
    $select?: Set<ABusinessPartnerBusinessPartnerToBuPaIdentificationGetSelectEnum>;
}

export interface ABusinessPartnerBusinessPartnerToBuPaIdentificationPostRequest {
    businessPartner: string;
    aPIBUSINESSPARTNERABuPaIdentificationTypeCreate: APIBUSINESSPARTNERABuPaIdentificationTypeCreate;
}

/**
 * 
 */
export class IdentificationApi extends runtime.BaseAPI {

    /**
     * Deletes business partner identification data by using business partner number, identification type, and identification number.
     * Deletes business partner identification data.
     */
    async aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteRaw(requestParameters: ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete.');
        }

        if (requestParameters.bPIdentificationType === null || requestParameters.bPIdentificationType === undefined) {
            throw new runtime.RequiredError('bPIdentificationType','Required parameter requestParameters.bPIdentificationType was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete.');
        }

        if (requestParameters.bPIdentificationNumber === null || requestParameters.bPIdentificationNumber === undefined) {
            throw new runtime.RequiredError('bPIdentificationNumber','Required parameter requestParameters.bPIdentificationNumber was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIdentification(BusinessPartner='{BusinessPartner}',BPIdentificationType='{BPIdentificationType}',BPIdentificationNumber='{BPIdentificationNumber}')`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"BPIdentificationType"}}`, encodeURIComponent(String(requestParameters.bPIdentificationType))).replace(`{${"BPIdentificationNumber"}}`, encodeURIComponent(String(requestParameters.bPIdentificationNumber))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Deletes business partner identification data by using business partner number, identification type, and identification number.
     * Deletes business partner identification data.
     */
    async aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDelete(requestParameters: ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves business partner identification data using business partner number, identification type, and identification number.
     * Retrieves business partner identification data by using key fields.
     */
    async aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetRaw(requestParameters: ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABuPaIdentificationType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet.');
        }

        if (requestParameters.bPIdentificationType === null || requestParameters.bPIdentificationType === undefined) {
            throw new runtime.RequiredError('bPIdentificationType','Required parameter requestParameters.bPIdentificationType was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet.');
        }

        if (requestParameters.bPIdentificationNumber === null || requestParameters.bPIdentificationNumber === undefined) {
            throw new runtime.RequiredError('bPIdentificationNumber','Required parameter requestParameters.bPIdentificationNumber was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIdentification(BusinessPartner='{BusinessPartner}',BPIdentificationType='{BPIdentificationType}',BPIdentificationNumber='{BPIdentificationNumber}')`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"BPIdentificationType"}}`, encodeURIComponent(String(requestParameters.bPIdentificationType))).replace(`{${"BPIdentificationNumber"}}`, encodeURIComponent(String(requestParameters.bPIdentificationNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABuPaIdentificationTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner identification data using business partner number, identification type, and identification number.
     * Retrieves business partner identification data by using key fields.
     */
    async aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGet(requestParameters: ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABuPaIdentificationType> {
        const response = await this.aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates business partner identification data by using business partner number, identification type, and identification number.
     * Updates business partner identification data.
     */
    async aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchRaw(requestParameters: ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch.');
        }

        if (requestParameters.bPIdentificationType === null || requestParameters.bPIdentificationType === undefined) {
            throw new runtime.RequiredError('bPIdentificationType','Required parameter requestParameters.bPIdentificationType was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch.');
        }

        if (requestParameters.bPIdentificationNumber === null || requestParameters.bPIdentificationNumber === undefined) {
            throw new runtime.RequiredError('bPIdentificationNumber','Required parameter requestParameters.bPIdentificationNumber was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeUpdate === null || requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeUpdate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABuPaIdentificationTypeUpdate','Required parameter requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeUpdate was null or undefined when calling aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIdentification(BusinessPartner='{BusinessPartner}',BPIdentificationType='{BPIdentificationType}',BPIdentificationNumber='{BPIdentificationNumber}')`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))).replace(`{${"BPIdentificationType"}}`, encodeURIComponent(String(requestParameters.bPIdentificationType))).replace(`{${"BPIdentificationNumber"}}`, encodeURIComponent(String(requestParameters.bPIdentificationNumber))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABuPaIdentificationTypeUpdateToJSON(requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeUpdate),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Updates business partner identification data by using business partner number, identification type, and identification number.
     * Updates business partner identification data.
     */
    async aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatch(requestParameters: ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberPatchRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves business partner identification data fields of all the records available records in the system.
     * Retrieves business partner identification data.
     */
    async aBuPaIdentificationGetRaw(requestParameters: ABuPaIdentificationGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABuPaIdentificationType>> {
        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIdentification`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABuPaIdentificationTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner identification data fields of all the records available records in the system.
     * Retrieves business partner identification data.
     */
    async aBuPaIdentificationGet(requestParameters: ABuPaIdentificationGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABuPaIdentificationType> {
        const response = await this.aBuPaIdentificationGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates new identification data record linked to business partner.
     * Creates new business partner identification data.
     */
    async aBuPaIdentificationPostRaw(requestParameters: ABuPaIdentificationPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABuPaIdentificationType>> {
        if (requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABuPaIdentificationTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeCreate was null or undefined when calling aBuPaIdentificationPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIdentification`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABuPaIdentificationTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABuPaIdentificationTypeFromJSON(jsonValue));
    }

    /**
     * Creates new identification data record linked to business partner.
     * Creates new business partner identification data.
     */
    async aBuPaIdentificationPost(requestParameters: ABuPaIdentificationPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABuPaIdentificationType> {
        const response = await this.aBuPaIdentificationPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves business partner identification data fields of all the records available records in the system.
     * Retrieves business partner identification data.
     */
    async aBusinessPartnerBusinessPartnerToBuPaIdentificationGetRaw(requestParameters: ABusinessPartnerBusinessPartnerToBuPaIdentificationGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABuPaIdentificationType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBuPaIdentificationGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BuPaIdentification`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABuPaIdentificationTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner identification data fields of all the records available records in the system.
     * Retrieves business partner identification data.
     */
    async aBusinessPartnerBusinessPartnerToBuPaIdentificationGet(requestParameters: ABusinessPartnerBusinessPartnerToBuPaIdentificationGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABuPaIdentificationType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBuPaIdentificationGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates new identification data record linked to business partner.
     * Creates new business partner identification data.
     */
    async aBusinessPartnerBusinessPartnerToBuPaIdentificationPostRaw(requestParameters: ABusinessPartnerBusinessPartnerToBuPaIdentificationPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABuPaIdentificationType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBuPaIdentificationPost.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABuPaIdentificationTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeCreate was null or undefined when calling aBusinessPartnerBusinessPartnerToBuPaIdentificationPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BuPaIdentification`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABuPaIdentificationTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABuPaIdentificationTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABuPaIdentificationTypeFromJSON(jsonValue));
    }

    /**
     * Creates new identification data record linked to business partner.
     * Creates new business partner identification data.
     */
    async aBusinessPartnerBusinessPartnerToBuPaIdentificationPost(requestParameters: ABusinessPartnerBusinessPartnerToBuPaIdentificationPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABuPaIdentificationType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBuPaIdentificationPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BpIdentificationType: 'BPIdentificationType',
    BpIdentificationNumber: 'BPIdentificationNumber',
    BpIdnNmbrIssuingInstitute: 'BPIdnNmbrIssuingInstitute',
    BpIdentificationEntryDate: 'BPIdentificationEntryDate',
    Country: 'Country',
    Region: 'Region',
    ValidityStartDate: 'ValidityStartDate',
    ValidityEndDate: 'ValidityEndDate',
    AuthorizationGroup: 'AuthorizationGroup'
} as const;
export type ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetSelectEnum = typeof ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetSelectEnum[keyof typeof ABuPaIdentificationBusinessPartnerBusinessPartnerBPIdentificationTypeBPIdentificationTypeBPIdentificationNumberBPIdentificationNumberGetSelectEnum];
/**
 * @export
 */
export const ABuPaIdentificationGetOrderbyEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    BpIdentificationType: 'BPIdentificationType',
    BpIdentificationTypeDesc: 'BPIdentificationType desc',
    BpIdentificationNumber: 'BPIdentificationNumber',
    BpIdentificationNumberDesc: 'BPIdentificationNumber desc',
    BpIdnNmbrIssuingInstitute: 'BPIdnNmbrIssuingInstitute',
    BpIdnNmbrIssuingInstituteDesc: 'BPIdnNmbrIssuingInstitute desc',
    BpIdentificationEntryDate: 'BPIdentificationEntryDate',
    BpIdentificationEntryDateDesc: 'BPIdentificationEntryDate desc',
    Country: 'Country',
    CountryDesc: 'Country desc',
    Region: 'Region',
    RegionDesc: 'Region desc',
    ValidityStartDate: 'ValidityStartDate',
    ValidityStartDateDesc: 'ValidityStartDate desc',
    ValidityEndDate: 'ValidityEndDate',
    ValidityEndDateDesc: 'ValidityEndDate desc',
    AuthorizationGroup: 'AuthorizationGroup',
    AuthorizationGroupDesc: 'AuthorizationGroup desc'
} as const;
export type ABuPaIdentificationGetOrderbyEnum = typeof ABuPaIdentificationGetOrderbyEnum[keyof typeof ABuPaIdentificationGetOrderbyEnum];
/**
 * @export
 */
export const ABuPaIdentificationGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BpIdentificationType: 'BPIdentificationType',
    BpIdentificationNumber: 'BPIdentificationNumber',
    BpIdnNmbrIssuingInstitute: 'BPIdnNmbrIssuingInstitute',
    BpIdentificationEntryDate: 'BPIdentificationEntryDate',
    Country: 'Country',
    Region: 'Region',
    ValidityStartDate: 'ValidityStartDate',
    ValidityEndDate: 'ValidityEndDate',
    AuthorizationGroup: 'AuthorizationGroup'
} as const;
export type ABuPaIdentificationGetSelectEnum = typeof ABuPaIdentificationGetSelectEnum[keyof typeof ABuPaIdentificationGetSelectEnum];
/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBuPaIdentificationGetOrderbyEnum = {
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    BpIdentificationType: 'BPIdentificationType',
    BpIdentificationTypeDesc: 'BPIdentificationType desc',
    BpIdentificationNumber: 'BPIdentificationNumber',
    BpIdentificationNumberDesc: 'BPIdentificationNumber desc',
    BpIdnNmbrIssuingInstitute: 'BPIdnNmbrIssuingInstitute',
    BpIdnNmbrIssuingInstituteDesc: 'BPIdnNmbrIssuingInstitute desc',
    BpIdentificationEntryDate: 'BPIdentificationEntryDate',
    BpIdentificationEntryDateDesc: 'BPIdentificationEntryDate desc',
    Country: 'Country',
    CountryDesc: 'Country desc',
    Region: 'Region',
    RegionDesc: 'Region desc',
    ValidityStartDate: 'ValidityStartDate',
    ValidityStartDateDesc: 'ValidityStartDate desc',
    ValidityEndDate: 'ValidityEndDate',
    ValidityEndDateDesc: 'ValidityEndDate desc',
    AuthorizationGroup: 'AuthorizationGroup',
    AuthorizationGroupDesc: 'AuthorizationGroup desc'
} as const;
export type ABusinessPartnerBusinessPartnerToBuPaIdentificationGetOrderbyEnum = typeof ABusinessPartnerBusinessPartnerToBuPaIdentificationGetOrderbyEnum[keyof typeof ABusinessPartnerBusinessPartnerToBuPaIdentificationGetOrderbyEnum];
/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBuPaIdentificationGetSelectEnum = {
    BusinessPartner: 'BusinessPartner',
    BpIdentificationType: 'BPIdentificationType',
    BpIdentificationNumber: 'BPIdentificationNumber',
    BpIdnNmbrIssuingInstitute: 'BPIdnNmbrIssuingInstitute',
    BpIdentificationEntryDate: 'BPIdentificationEntryDate',
    Country: 'Country',
    Region: 'Region',
    ValidityStartDate: 'ValidityStartDate',
    ValidityEndDate: 'ValidityEndDate',
    AuthorizationGroup: 'AuthorizationGroup'
} as const;
export type ABusinessPartnerBusinessPartnerToBuPaIdentificationGetSelectEnum = typeof ABusinessPartnerBusinessPartnerToBuPaIdentificationGetSelectEnum[keyof typeof ABusinessPartnerBusinessPartnerToBuPaIdentificationGetSelectEnum];
