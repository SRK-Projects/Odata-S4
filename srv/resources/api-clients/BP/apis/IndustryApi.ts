/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  APIBUSINESSPARTNERABuPaIndustryType,
  APIBUSINESSPARTNERABuPaIndustryTypeCreate,
  APIBUSINESSPARTNERABuPaIndustryTypeUpdate,
  CollectionOfABuPaIndustryType,
  ModelError,
} from '../models/index';
import {
    APIBUSINESSPARTNERABuPaIndustryTypeFromJSON,
    APIBUSINESSPARTNERABuPaIndustryTypeToJSON,
    APIBUSINESSPARTNERABuPaIndustryTypeCreateFromJSON,
    APIBUSINESSPARTNERABuPaIndustryTypeCreateToJSON,
    APIBUSINESSPARTNERABuPaIndustryTypeUpdateFromJSON,
    APIBUSINESSPARTNERABuPaIndustryTypeUpdateToJSON,
    CollectionOfABuPaIndustryTypeFromJSON,
    CollectionOfABuPaIndustryTypeToJSON,
    ModelErrorFromJSON,
    ModelErrorToJSON,
} from '../models/index';

export interface ABuPaIndustryGetRequest {
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABuPaIndustryGetOrderbyEnum>;
    $select?: Set<ABuPaIndustryGetSelectEnum>;
}

export interface ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDeleteRequest {
    industrySector: string;
    industrySystemType: string;
    businessPartner: string;
}

export interface ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetRequest {
    industrySector: string;
    industrySystemType: string;
    businessPartner: string;
    $select?: Set<ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetSelectEnum>;
}

export interface ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatchRequest {
    industrySector: string;
    industrySystemType: string;
    businessPartner: string;
    aPIBUSINESSPARTNERABuPaIndustryTypeUpdate: APIBUSINESSPARTNERABuPaIndustryTypeUpdate;
}

export interface ABuPaIndustryPostRequest {
    aPIBUSINESSPARTNERABuPaIndustryTypeCreate: APIBUSINESSPARTNERABuPaIndustryTypeCreate;
}

export interface ABusinessPartnerBusinessPartnerToBuPaIndustryGetRequest {
    businessPartner: string;
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ABusinessPartnerBusinessPartnerToBuPaIndustryGetOrderbyEnum>;
    $select?: Set<ABusinessPartnerBusinessPartnerToBuPaIndustryGetSelectEnum>;
}

export interface ABusinessPartnerBusinessPartnerToBuPaIndustryPostRequest {
    businessPartner: string;
    aPIBUSINESSPARTNERABuPaIndustryTypeCreate: APIBUSINESSPARTNERABuPaIndustryTypeCreate;
}

/**
 * 
 */
export class IndustryApi extends runtime.BaseAPI {

    /**
     * Retrieves business partner industry data fields of all the available records in the system.
     * Retrieves business partner industry data.
     */
    async aBuPaIndustryGetRaw(requestParameters: ABuPaIndustryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABuPaIndustryType>> {
        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIndustry`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABuPaIndustryTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner industry data fields of all the available records in the system.
     * Retrieves business partner industry data.
     */
    async aBuPaIndustryGet(requestParameters: ABuPaIndustryGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABuPaIndustryType> {
        const response = await this.aBuPaIndustryGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Removes industry data linked to the business partner record identified by IndustrySector, IndustrySystemType, and BusinessPartner.
     * Deletes business partner industry data.
     */
    async aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDeleteRaw(requestParameters: ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.industrySector === null || requestParameters.industrySector === undefined) {
            throw new runtime.RequiredError('industrySector','Required parameter requestParameters.industrySector was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDelete.');
        }

        if (requestParameters.industrySystemType === null || requestParameters.industrySystemType === undefined) {
            throw new runtime.RequiredError('industrySystemType','Required parameter requestParameters.industrySystemType was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDelete.');
        }

        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIndustry(IndustrySector='{IndustrySector}',IndustrySystemType='{IndustrySystemType}',BusinessPartner='{BusinessPartner}')`.replace(`{${"IndustrySector"}}`, encodeURIComponent(String(requestParameters.industrySector))).replace(`{${"IndustrySystemType"}}`, encodeURIComponent(String(requestParameters.industrySystemType))).replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Removes industry data linked to the business partner record identified by IndustrySector, IndustrySystemType, and BusinessPartner.
     * Deletes business partner industry data.
     */
    async aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDelete(requestParameters: ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves business partner industry data by using industry sector, industry system type and business partner number
     * Retrieves business partner industry data by key fields.
     */
    async aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetRaw(requestParameters: ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABuPaIndustryType>> {
        if (requestParameters.industrySector === null || requestParameters.industrySector === undefined) {
            throw new runtime.RequiredError('industrySector','Required parameter requestParameters.industrySector was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGet.');
        }

        if (requestParameters.industrySystemType === null || requestParameters.industrySystemType === undefined) {
            throw new runtime.RequiredError('industrySystemType','Required parameter requestParameters.industrySystemType was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGet.');
        }

        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIndustry(IndustrySector='{IndustrySector}',IndustrySystemType='{IndustrySystemType}',BusinessPartner='{BusinessPartner}')`.replace(`{${"IndustrySector"}}`, encodeURIComponent(String(requestParameters.industrySector))).replace(`{${"IndustrySystemType"}}`, encodeURIComponent(String(requestParameters.industrySystemType))).replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABuPaIndustryTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner industry data by using industry sector, industry system type and business partner number
     * Retrieves business partner industry data by key fields.
     */
    async aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGet(requestParameters: ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABuPaIndustryType> {
        const response = await this.aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates business partner industry data by industry sector, industry system type and business partner number
     * Updates business partner industry data.
     */
    async aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatchRaw(requestParameters: ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.industrySector === null || requestParameters.industrySector === undefined) {
            throw new runtime.RequiredError('industrySector','Required parameter requestParameters.industrySector was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatch.');
        }

        if (requestParameters.industrySystemType === null || requestParameters.industrySystemType === undefined) {
            throw new runtime.RequiredError('industrySystemType','Required parameter requestParameters.industrySystemType was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatch.');
        }

        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatch.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeUpdate === null || requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeUpdate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABuPaIndustryTypeUpdate','Required parameter requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeUpdate was null or undefined when calling aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIndustry(IndustrySector='{IndustrySector}',IndustrySystemType='{IndustrySystemType}',BusinessPartner='{BusinessPartner}')`.replace(`{${"IndustrySector"}}`, encodeURIComponent(String(requestParameters.industrySector))).replace(`{${"IndustrySystemType"}}`, encodeURIComponent(String(requestParameters.industrySystemType))).replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABuPaIndustryTypeUpdateToJSON(requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeUpdate),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Updates business partner industry data by industry sector, industry system type and business partner number
     * Updates business partner industry data.
     */
    async aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatch(requestParameters: ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aBuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerPatchRaw(requestParameters, initOverrides);
    }

    /**
     * Assigns new industry data to the business partner record.
     * Creates industry data linked to business partner record.
     */
    async aBuPaIndustryPostRaw(requestParameters: ABuPaIndustryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABuPaIndustryType>> {
        if (requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABuPaIndustryTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeCreate was null or undefined when calling aBuPaIndustryPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BuPaIndustry`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABuPaIndustryTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABuPaIndustryTypeFromJSON(jsonValue));
    }

    /**
     * Assigns new industry data to the business partner record.
     * Creates industry data linked to business partner record.
     */
    async aBuPaIndustryPost(requestParameters: ABuPaIndustryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABuPaIndustryType> {
        const response = await this.aBuPaIndustryPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves business partner industry data fields of all the available records in the system.
     * Retrieves business partner industry data.
     */
    async aBusinessPartnerBusinessPartnerToBuPaIndustryGetRaw(requestParameters: ABusinessPartnerBusinessPartnerToBuPaIndustryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfABuPaIndustryType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBuPaIndustryGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BuPaIndustry`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfABuPaIndustryTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves business partner industry data fields of all the available records in the system.
     * Retrieves business partner industry data.
     */
    async aBusinessPartnerBusinessPartnerToBuPaIndustryGet(requestParameters: ABusinessPartnerBusinessPartnerToBuPaIndustryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfABuPaIndustryType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBuPaIndustryGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Assigns new industry data to the business partner record.
     * Creates industry data linked to business partner record.
     */
    async aBusinessPartnerBusinessPartnerToBuPaIndustryPostRaw(requestParameters: ABusinessPartnerBusinessPartnerToBuPaIndustryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERABuPaIndustryType>> {
        if (requestParameters.businessPartner === null || requestParameters.businessPartner === undefined) {
            throw new runtime.RequiredError('businessPartner','Required parameter requestParameters.businessPartner was null or undefined when calling aBusinessPartnerBusinessPartnerToBuPaIndustryPost.');
        }

        if (requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeCreate === null || requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERABuPaIndustryTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeCreate was null or undefined when calling aBusinessPartnerBusinessPartnerToBuPaIndustryPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_BusinessPartner('{BusinessPartner}')/to_BuPaIndustry`.replace(`{${"BusinessPartner"}}`, encodeURIComponent(String(requestParameters.businessPartner))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERABuPaIndustryTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERABuPaIndustryTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERABuPaIndustryTypeFromJSON(jsonValue));
    }

    /**
     * Assigns new industry data to the business partner record.
     * Creates industry data linked to business partner record.
     */
    async aBusinessPartnerBusinessPartnerToBuPaIndustryPost(requestParameters: ABusinessPartnerBusinessPartnerToBuPaIndustryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERABuPaIndustryType> {
        const response = await this.aBusinessPartnerBusinessPartnerToBuPaIndustryPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ABuPaIndustryGetOrderbyEnum = {
    IndustrySector: 'IndustrySector',
    IndustrySectorDesc: 'IndustrySector desc',
    IndustrySystemType: 'IndustrySystemType',
    IndustrySystemTypeDesc: 'IndustrySystemType desc',
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    IsStandardIndustry: 'IsStandardIndustry',
    IsStandardIndustryDesc: 'IsStandardIndustry desc',
    IndustryKeyDescription: 'IndustryKeyDescription',
    IndustryKeyDescriptionDesc: 'IndustryKeyDescription desc'
} as const;
export type ABuPaIndustryGetOrderbyEnum = typeof ABuPaIndustryGetOrderbyEnum[keyof typeof ABuPaIndustryGetOrderbyEnum];
/**
 * @export
 */
export const ABuPaIndustryGetSelectEnum = {
    IndustrySector: 'IndustrySector',
    IndustrySystemType: 'IndustrySystemType',
    BusinessPartner: 'BusinessPartner',
    IsStandardIndustry: 'IsStandardIndustry',
    IndustryKeyDescription: 'IndustryKeyDescription'
} as const;
export type ABuPaIndustryGetSelectEnum = typeof ABuPaIndustryGetSelectEnum[keyof typeof ABuPaIndustryGetSelectEnum];
/**
 * @export
 */
export const ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetSelectEnum = {
    IndustrySector: 'IndustrySector',
    IndustrySystemType: 'IndustrySystemType',
    BusinessPartner: 'BusinessPartner',
    IsStandardIndustry: 'IsStandardIndustry',
    IndustryKeyDescription: 'IndustryKeyDescription'
} as const;
export type ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetSelectEnum = typeof ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetSelectEnum[keyof typeof ABuPaIndustryIndustrySectorIndustrySectorIndustrySystemTypeIndustrySystemTypeBusinessPartnerBusinessPartnerGetSelectEnum];
/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBuPaIndustryGetOrderbyEnum = {
    IndustrySector: 'IndustrySector',
    IndustrySectorDesc: 'IndustrySector desc',
    IndustrySystemType: 'IndustrySystemType',
    IndustrySystemTypeDesc: 'IndustrySystemType desc',
    BusinessPartner: 'BusinessPartner',
    BusinessPartnerDesc: 'BusinessPartner desc',
    IsStandardIndustry: 'IsStandardIndustry',
    IsStandardIndustryDesc: 'IsStandardIndustry desc',
    IndustryKeyDescription: 'IndustryKeyDescription',
    IndustryKeyDescriptionDesc: 'IndustryKeyDescription desc'
} as const;
export type ABusinessPartnerBusinessPartnerToBuPaIndustryGetOrderbyEnum = typeof ABusinessPartnerBusinessPartnerToBuPaIndustryGetOrderbyEnum[keyof typeof ABusinessPartnerBusinessPartnerToBuPaIndustryGetOrderbyEnum];
/**
 * @export
 */
export const ABusinessPartnerBusinessPartnerToBuPaIndustryGetSelectEnum = {
    IndustrySector: 'IndustrySector',
    IndustrySystemType: 'IndustrySystemType',
    BusinessPartner: 'BusinessPartner',
    IsStandardIndustry: 'IsStandardIndustry',
    IndustryKeyDescription: 'IndustryKeyDescription'
} as const;
export type ABusinessPartnerBusinessPartnerToBuPaIndustryGetSelectEnum = typeof ABusinessPartnerBusinessPartnerToBuPaIndustryGetSelectEnum[keyof typeof ABusinessPartnerBusinessPartnerToBuPaIndustryGetSelectEnum];
