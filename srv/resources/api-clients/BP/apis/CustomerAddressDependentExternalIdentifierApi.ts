/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  APIBUSINESSPARTNERACustAddrDepdntExtIdentifierType,
  APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate,
  APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdate,
  CollectionOfACustAddrDepdntExtIdentifierType,
  ModelError,
} from '../models/index';
import {
    APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeFromJSON,
    APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeToJSON,
    APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreateFromJSON,
    APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreateToJSON,
    APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdateFromJSON,
    APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdateToJSON,
    CollectionOfACustAddrDepdntExtIdentifierTypeFromJSON,
    CollectionOfACustAddrDepdntExtIdentifierTypeToJSON,
    ModelErrorFromJSON,
    ModelErrorToJSON,
} from '../models/index';

export interface ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDDeleteRequest {
    customer: string;
    addressID: string;
}

export interface ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetRequest {
    customer: string;
    addressID: string;
    $select?: Set<ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetSelectEnum>;
}

export interface ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatchRequest {
    customer: string;
    addressID: string;
    aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdate: APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdate;
}

export interface ACustAddrDepdntExtIdentifierGetRequest {
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ACustAddrDepdntExtIdentifierGetOrderbyEnum>;
    $select?: Set<ACustAddrDepdntExtIdentifierGetSelectEnum>;
}

export interface ACustAddrDepdntExtIdentifierPostRequest {
    aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate: APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate;
}

export interface ACustomerCustomerToCustAddrDepdntExtIdentifierGetRequest {
    customer: string;
    $top?: number;
    $skip?: number;
    $filter?: string;
    $count?: boolean;
    $orderby?: Set<ACustomerCustomerToCustAddrDepdntExtIdentifierGetOrderbyEnum>;
    $select?: Set<ACustomerCustomerToCustAddrDepdntExtIdentifierGetSelectEnum>;
}

export interface ACustomerCustomerToCustAddrDepdntExtIdentifierPostRequest {
    customer: string;
    aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate: APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate;
}

/**
 * 
 */
export class CustomerAddressDependentExternalIdentifierApi extends runtime.BaseAPI {

    /**
     * Deletes the address dependent external identifier identified by customer number and address ID.
     * Deletes the address dependent external identifier of a customer.
     */
    async aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDDeleteRaw(requestParameters: ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.customer === null || requestParameters.customer === undefined) {
            throw new runtime.RequiredError('customer','Required parameter requestParameters.customer was null or undefined when calling aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDDelete.');
        }

        if (requestParameters.addressID === null || requestParameters.addressID === undefined) {
            throw new runtime.RequiredError('addressID','Required parameter requestParameters.addressID was null or undefined when calling aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_CustAddrDepdntExtIdentifier(Customer='{Customer}',AddressID='{AddressID}')`.replace(`{${"Customer"}}`, encodeURIComponent(String(requestParameters.customer))).replace(`{${"AddressID"}}`, encodeURIComponent(String(requestParameters.addressID))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Deletes the address dependent external identifier identified by customer number and address ID.
     * Deletes the address dependent external identifier of a customer.
     */
    async aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDDelete(requestParameters: ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves the address dependent external identifiers of all the available records linked to customers in the system.
     * Retrieves the address dependent external identifier of customers.
     */
    async aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetRaw(requestParameters: ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERACustAddrDepdntExtIdentifierType>> {
        if (requestParameters.customer === null || requestParameters.customer === undefined) {
            throw new runtime.RequiredError('customer','Required parameter requestParameters.customer was null or undefined when calling aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGet.');
        }

        if (requestParameters.addressID === null || requestParameters.addressID === undefined) {
            throw new runtime.RequiredError('addressID','Required parameter requestParameters.addressID was null or undefined when calling aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_CustAddrDepdntExtIdentifier(Customer='{Customer}',AddressID='{AddressID}')`.replace(`{${"Customer"}}`, encodeURIComponent(String(requestParameters.customer))).replace(`{${"AddressID"}}`, encodeURIComponent(String(requestParameters.addressID))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves the address dependent external identifiers of all the available records linked to customers in the system.
     * Retrieves the address dependent external identifier of customers.
     */
    async aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGet(requestParameters: ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERACustAddrDepdntExtIdentifierType> {
        const response = await this.aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates the address dependent external identifier identified by customer number and address ID.
     * Updates the address dependent external identifier of a customer.
     */
    async aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatchRaw(requestParameters: ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.customer === null || requestParameters.customer === undefined) {
            throw new runtime.RequiredError('customer','Required parameter requestParameters.customer was null or undefined when calling aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatch.');
        }

        if (requestParameters.addressID === null || requestParameters.addressID === undefined) {
            throw new runtime.RequiredError('addressID','Required parameter requestParameters.addressID was null or undefined when calling aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatch.');
        }

        if (requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdate === null || requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdate','Required parameter requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdate was null or undefined when calling aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_CustAddrDepdntExtIdentifier(Customer='{Customer}',AddressID='{AddressID}')`.replace(`{${"Customer"}}`, encodeURIComponent(String(requestParameters.customer))).replace(`{${"AddressID"}}`, encodeURIComponent(String(requestParameters.addressID))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdateToJSON(requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeUpdate),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Updates the address dependent external identifier identified by customer number and address ID.
     * Updates the address dependent external identifier of a customer.
     */
    async aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatch(requestParameters: ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.aCustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDPatchRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves the address dependent external identifiers of all the available records linked to customers in the system.
     * Retrieves the address dependent external identifier of customers.
     */
    async aCustAddrDepdntExtIdentifierGetRaw(requestParameters: ACustAddrDepdntExtIdentifierGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfACustAddrDepdntExtIdentifierType>> {
        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_CustAddrDepdntExtIdentifier`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfACustAddrDepdntExtIdentifierTypeFromJSON(jsonValue));
    }

    /**
     * Retrieves the address dependent external identifiers of all the available records linked to customers in the system.
     * Retrieves the address dependent external identifier of customers.
     */
    async aCustAddrDepdntExtIdentifierGet(requestParameters: ACustAddrDepdntExtIdentifierGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfACustAddrDepdntExtIdentifierType> {
        const response = await this.aCustAddrDepdntExtIdentifierGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates the address dependent external identifier linked to an existing customer.
     * Creates the address dependent external identifier of a customer.
     */
    async aCustAddrDepdntExtIdentifierPostRaw(requestParameters: ACustAddrDepdntExtIdentifierPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERACustAddrDepdntExtIdentifierType>> {
        if (requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate === null || requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate was null or undefined when calling aCustAddrDepdntExtIdentifierPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_CustAddrDepdntExtIdentifier`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeFromJSON(jsonValue));
    }

    /**
     * Creates the address dependent external identifier linked to an existing customer.
     * Creates the address dependent external identifier of a customer.
     */
    async aCustAddrDepdntExtIdentifierPost(requestParameters: ACustAddrDepdntExtIdentifierPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERACustAddrDepdntExtIdentifierType> {
        const response = await this.aCustAddrDepdntExtIdentifierPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get entities from related to_CustAddrDepdntExtIdentifier
     */
    async aCustomerCustomerToCustAddrDepdntExtIdentifierGetRaw(requestParameters: ACustomerCustomerToCustAddrDepdntExtIdentifierGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionOfACustAddrDepdntExtIdentifierType>> {
        if (requestParameters.customer === null || requestParameters.customer === undefined) {
            throw new runtime.RequiredError('customer','Required parameter requestParameters.customer was null or undefined when calling aCustomerCustomerToCustAddrDepdntExtIdentifierGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.$top !== undefined) {
            queryParameters['$top'] = requestParameters.$top;
        }

        if (requestParameters.$skip !== undefined) {
            queryParameters['$skip'] = requestParameters.$skip;
        }

        if (requestParameters.$filter !== undefined) {
            queryParameters['$filter'] = requestParameters.$filter;
        }

        if (requestParameters.$count !== undefined) {
            queryParameters['$count'] = requestParameters.$count;
        }

        if (requestParameters.$orderby) {
            queryParameters['$orderby'] = Array.from(requestParameters.$orderby).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.$select) {
            queryParameters['$select'] = Array.from(requestParameters.$select).join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_Customer('{Customer}')/to_CustAddrDepdntExtIdentifier`.replace(`{${"Customer"}}`, encodeURIComponent(String(requestParameters.customer))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionOfACustAddrDepdntExtIdentifierTypeFromJSON(jsonValue));
    }

    /**
     * Get entities from related to_CustAddrDepdntExtIdentifier
     */
    async aCustomerCustomerToCustAddrDepdntExtIdentifierGet(requestParameters: ACustomerCustomerToCustAddrDepdntExtIdentifierGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionOfACustAddrDepdntExtIdentifierType> {
        const response = await this.aCustomerCustomerToCustAddrDepdntExtIdentifierGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Add new entity to related to_CustAddrDepdntExtIdentifier
     */
    async aCustomerCustomerToCustAddrDepdntExtIdentifierPostRaw(requestParameters: ACustomerCustomerToCustAddrDepdntExtIdentifierPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<APIBUSINESSPARTNERACustAddrDepdntExtIdentifierType>> {
        if (requestParameters.customer === null || requestParameters.customer === undefined) {
            throw new runtime.RequiredError('customer','Required parameter requestParameters.customer was null or undefined when calling aCustomerCustomerToCustAddrDepdntExtIdentifierPost.');
        }

        if (requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate === null || requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate === undefined) {
            throw new runtime.RequiredError('aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate','Required parameter requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate was null or undefined when calling aCustomerCustomerToCustAddrDepdntExtIdentifierPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2Auth", ["API_BUSINESS_PARTNER_0001"]);
        }

        const response = await this.request({
            path: `/A_Customer('{Customer}')/to_CustAddrDepdntExtIdentifier`.replace(`{${"Customer"}}`, encodeURIComponent(String(requestParameters.customer))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreateToJSON(requestParameters.aPIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => APIBUSINESSPARTNERACustAddrDepdntExtIdentifierTypeFromJSON(jsonValue));
    }

    /**
     * Add new entity to related to_CustAddrDepdntExtIdentifier
     */
    async aCustomerCustomerToCustAddrDepdntExtIdentifierPost(requestParameters: ACustomerCustomerToCustAddrDepdntExtIdentifierPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<APIBUSINESSPARTNERACustAddrDepdntExtIdentifierType> {
        const response = await this.aCustomerCustomerToCustAddrDepdntExtIdentifierPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetSelectEnum = {
    Customer: 'Customer',
    AddressId: 'AddressID',
    CustomerExternalRefId: 'CustomerExternalRefID'
} as const;
export type ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetSelectEnum = typeof ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetSelectEnum[keyof typeof ACustAddrDepdntExtIdentifierCustomerCustomerAddressIDAddressIDGetSelectEnum];
/**
 * @export
 */
export const ACustAddrDepdntExtIdentifierGetOrderbyEnum = {
    Customer: 'Customer',
    CustomerDesc: 'Customer desc',
    AddressId: 'AddressID',
    AddressIdDesc: 'AddressID desc',
    CustomerExternalRefId: 'CustomerExternalRefID',
    CustomerExternalRefIdDesc: 'CustomerExternalRefID desc'
} as const;
export type ACustAddrDepdntExtIdentifierGetOrderbyEnum = typeof ACustAddrDepdntExtIdentifierGetOrderbyEnum[keyof typeof ACustAddrDepdntExtIdentifierGetOrderbyEnum];
/**
 * @export
 */
export const ACustAddrDepdntExtIdentifierGetSelectEnum = {
    Customer: 'Customer',
    AddressId: 'AddressID',
    CustomerExternalRefId: 'CustomerExternalRefID'
} as const;
export type ACustAddrDepdntExtIdentifierGetSelectEnum = typeof ACustAddrDepdntExtIdentifierGetSelectEnum[keyof typeof ACustAddrDepdntExtIdentifierGetSelectEnum];
/**
 * @export
 */
export const ACustomerCustomerToCustAddrDepdntExtIdentifierGetOrderbyEnum = {
    Customer: 'Customer',
    CustomerDesc: 'Customer desc',
    AddressId: 'AddressID',
    AddressIdDesc: 'AddressID desc',
    CustomerExternalRefId: 'CustomerExternalRefID',
    CustomerExternalRefIdDesc: 'CustomerExternalRefID desc'
} as const;
export type ACustomerCustomerToCustAddrDepdntExtIdentifierGetOrderbyEnum = typeof ACustomerCustomerToCustAddrDepdntExtIdentifierGetOrderbyEnum[keyof typeof ACustomerCustomerToCustAddrDepdntExtIdentifierGetOrderbyEnum];
/**
 * @export
 */
export const ACustomerCustomerToCustAddrDepdntExtIdentifierGetSelectEnum = {
    Customer: 'Customer',
    AddressId: 'AddressID',
    CustomerExternalRefId: 'CustomerExternalRefID'
} as const;
export type ACustomerCustomerToCustAddrDepdntExtIdentifierGetSelectEnum = typeof ACustomerCustomerToCustAddrDepdntExtIdentifierGetSelectEnum[keyof typeof ACustomerCustomerToCustAddrDepdntExtIdentifierGetSelectEnum];
