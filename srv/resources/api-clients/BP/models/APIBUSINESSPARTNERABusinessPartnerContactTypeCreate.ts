/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { APIBUSINESSPARTNERABPContactToAddressTypeCreate } from './APIBUSINESSPARTNERABPContactToAddressTypeCreate';
import {
    APIBUSINESSPARTNERABPContactToAddressTypeCreateFromJSON,
    APIBUSINESSPARTNERABPContactToAddressTypeCreateFromJSONTyped,
    APIBUSINESSPARTNERABPContactToAddressTypeCreateToJSON,
} from './APIBUSINESSPARTNERABPContactToAddressTypeCreate';
import type { APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreate } from './APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreate';
import {
    APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreateFromJSON,
    APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreateFromJSONTyped,
    APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreateToJSON,
} from './APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreate';

/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
 */
export interface APIBUSINESSPARTNERABusinessPartnerContactTypeCreate {
    /**
     * BP Relationship Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    relationshipNumber: string;
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    businessPartnerCompany: string;
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    businessPartnerPerson: string;
    /**
     * Validity Date (Valid To)
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    validityEndDate: Date;
    /**
     * Validity Date (Valid From)
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    validityStartDate?: Date | null;
    /**
     * Standard Relationship
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    isStandardRelationship?: boolean | null;
    /**
     * Business Partner Relationship Category
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    relationshipCategory?: string | null;
    /**
     * 
     * @type {Array<APIBUSINESSPARTNERABPContactToAddressTypeCreate>}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    toContactAddress?: Array<APIBUSINESSPARTNERABPContactToAddressTypeCreate>;
    /**
     * 
     * @type {APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreate}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeCreate
     */
    toContactRelationship?: APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreate | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABusinessPartnerContactTypeCreate interface.
 */
export function instanceOfAPIBUSINESSPARTNERABusinessPartnerContactTypeCreate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "relationshipNumber" in value;
    isInstance = isInstance && "businessPartnerCompany" in value;
    isInstance = isInstance && "businessPartnerPerson" in value;
    isInstance = isInstance && "validityEndDate" in value;

    return isInstance;
}

export function APIBUSINESSPARTNERABusinessPartnerContactTypeCreateFromJSON(json: any): APIBUSINESSPARTNERABusinessPartnerContactTypeCreate {
    return APIBUSINESSPARTNERABusinessPartnerContactTypeCreateFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABusinessPartnerContactTypeCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABusinessPartnerContactTypeCreate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'relationshipNumber': json['RelationshipNumber'],
        'businessPartnerCompany': json['BusinessPartnerCompany'],
        'businessPartnerPerson': json['BusinessPartnerPerson'],
        'validityEndDate': (new Date(json['ValidityEndDate'])),
        'validityStartDate': !exists(json, 'ValidityStartDate') ? undefined : (json['ValidityStartDate'] === null ? null : new Date(json['ValidityStartDate'])),
        'isStandardRelationship': !exists(json, 'IsStandardRelationship') ? undefined : json['IsStandardRelationship'],
        'relationshipCategory': !exists(json, 'RelationshipCategory') ? undefined : json['RelationshipCategory'],
        'toContactAddress': !exists(json, 'to_ContactAddress') ? undefined : ((json['to_ContactAddress'] as Array<any>).map(APIBUSINESSPARTNERABPContactToAddressTypeCreateFromJSON)),
        'toContactRelationship': !exists(json, 'to_ContactRelationship') ? undefined : APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreateFromJSON(json['to_ContactRelationship']),
    };
}

export function APIBUSINESSPARTNERABusinessPartnerContactTypeCreateToJSON(value?: APIBUSINESSPARTNERABusinessPartnerContactTypeCreate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'RelationshipNumber': value.relationshipNumber,
        'BusinessPartnerCompany': value.businessPartnerCompany,
        'BusinessPartnerPerson': value.businessPartnerPerson,
        'ValidityEndDate': (value.validityEndDate.toISOString().substring(0,10)),
        'ValidityStartDate': value.validityStartDate === undefined ? undefined : (value.validityStartDate === null ? null : value.validityStartDate.toISOString().substring(0,10)),
        'IsStandardRelationship': value.isStandardRelationship,
        'RelationshipCategory': value.relationshipCategory,
        'to_ContactAddress': value.toContactAddress === undefined ? undefined : ((value.toContactAddress as Array<any>).map(APIBUSINESSPARTNERABPContactToAddressTypeCreateToJSON)),
        'to_ContactRelationship': APIBUSINESSPARTNERABPContactToFuncAndDeptTypeCreateToJSON(value.toContactRelationship),
    };
}

