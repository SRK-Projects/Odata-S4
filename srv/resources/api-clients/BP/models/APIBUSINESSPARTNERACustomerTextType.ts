/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERACustomerTextType
 */
export interface APIBUSINESSPARTNERACustomerTextType {
    /**
     * Customer Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerTextType
     */
    customer?: string;
    /**
     * Language key
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerTextType
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerTextType
     */
    longTextID?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerTextType
     */
    longText?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERACustomerTextType interface.
 */
export function instanceOfAPIBUSINESSPARTNERACustomerTextType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERACustomerTextTypeFromJSON(json: any): APIBUSINESSPARTNERACustomerTextType {
    return APIBUSINESSPARTNERACustomerTextTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERACustomerTextTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERACustomerTextType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customer': !exists(json, 'Customer') ? undefined : json['Customer'],
        'language': !exists(json, 'Language') ? undefined : json['Language'],
        'longTextID': !exists(json, 'LongTextID') ? undefined : json['LongTextID'],
        'longText': !exists(json, 'LongText') ? undefined : json['LongText'],
    };
}

export function APIBUSINESSPARTNERACustomerTextTypeToJSON(value?: APIBUSINESSPARTNERACustomerTextType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Customer': value.customer,
        'Language': value.language,
        'LongTextID': value.longTextID,
        'LongText': value.longText,
    };
}

