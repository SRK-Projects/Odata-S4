/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABPEmploymentTypeUpdate
 */
export interface APIBUSINESSPARTNERABPEmploymentTypeUpdate {
    /**
     * 
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABPEmploymentTypeUpdate
     */
    bPEmploymentEndDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPEmploymentTypeUpdate
     */
    bPEmploymentStatus?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPEmploymentTypeUpdate
     */
    busPartEmplrIndstryCode?: string | null;
    /**
     * Name of Employer of a Natural Person
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPEmploymentTypeUpdate
     */
    businessPartnerEmployerName?: string | null;
    /**
     * Occupation/group
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPEmploymentTypeUpdate
     */
    businessPartnerOccupationGroup?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABPEmploymentTypeUpdate interface.
 */
export function instanceOfAPIBUSINESSPARTNERABPEmploymentTypeUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABPEmploymentTypeUpdateFromJSON(json: any): APIBUSINESSPARTNERABPEmploymentTypeUpdate {
    return APIBUSINESSPARTNERABPEmploymentTypeUpdateFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABPEmploymentTypeUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABPEmploymentTypeUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bPEmploymentEndDate': !exists(json, 'BPEmploymentEndDate') ? undefined : (json['BPEmploymentEndDate'] === null ? null : new Date(json['BPEmploymentEndDate'])),
        'bPEmploymentStatus': !exists(json, 'BPEmploymentStatus') ? undefined : json['BPEmploymentStatus'],
        'busPartEmplrIndstryCode': !exists(json, 'BusPartEmplrIndstryCode') ? undefined : json['BusPartEmplrIndstryCode'],
        'businessPartnerEmployerName': !exists(json, 'BusinessPartnerEmployerName') ? undefined : json['BusinessPartnerEmployerName'],
        'businessPartnerOccupationGroup': !exists(json, 'BusinessPartnerOccupationGroup') ? undefined : json['BusinessPartnerOccupationGroup'],
    };
}

export function APIBUSINESSPARTNERABPEmploymentTypeUpdateToJSON(value?: APIBUSINESSPARTNERABPEmploymentTypeUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BPEmploymentEndDate': value.bPEmploymentEndDate === undefined ? undefined : (value.bPEmploymentEndDate === null ? null : value.bPEmploymentEndDate.toISOString().substring(0,10)),
        'BPEmploymentStatus': value.bPEmploymentStatus,
        'BusPartEmplrIndstryCode': value.busPartEmplrIndstryCode,
        'BusinessPartnerEmployerName': value.businessPartnerEmployerName,
        'BusinessPartnerOccupationGroup': value.businessPartnerOccupationGroup,
    };
}

