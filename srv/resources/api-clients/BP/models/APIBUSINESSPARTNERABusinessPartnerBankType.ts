/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABusinessPartnerBankType
 */
export interface APIBUSINESSPARTNERABusinessPartnerBankType {
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    businessPartner?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankIdentification?: string;
    /**
     * Bank Country/Region Key
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankCountryKey?: string | null;
    /**
     * Name of Financial Institution
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankNumber?: string | null;
    /**
     * SWIFT/BIC for International Payments
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    sWIFTCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankControlKey?: string | null;
    /**
     * Account Holder Name
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankAccountHolderName?: string | null;
    /**
     * Name of Bank Account
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankAccountName?: string | null;
    /**
     * Validity Start of Business Partner Bank Details
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    validityStartDate?: Date | null;
    /**
     * Validity End of Business Partner Bank Details
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    validityEndDate?: Date | null;
    /**
     * IBAN (International Bank Account Number)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    iBAN?: string | null;
    /**
     * Validity Start of IBAN
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    iBANValidityStartDate?: Date | null;
    /**
     * Bank Account Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankAccount?: string | null;
    /**
     * Reference Details for Bank Details
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    bankAccountReferenceText?: string | null;
    /**
     * Indicator: Collection Authorization
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    collectionAuthInd?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    cityName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerBankType
     */
    authorizationGroup?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABusinessPartnerBankType interface.
 */
export function instanceOfAPIBUSINESSPARTNERABusinessPartnerBankType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABusinessPartnerBankTypeFromJSON(json: any): APIBUSINESSPARTNERABusinessPartnerBankType {
    return APIBUSINESSPARTNERABusinessPartnerBankTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABusinessPartnerBankTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABusinessPartnerBankType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'businessPartner': !exists(json, 'BusinessPartner') ? undefined : json['BusinessPartner'],
        'bankIdentification': !exists(json, 'BankIdentification') ? undefined : json['BankIdentification'],
        'bankCountryKey': !exists(json, 'BankCountryKey') ? undefined : json['BankCountryKey'],
        'bankName': !exists(json, 'BankName') ? undefined : json['BankName'],
        'bankNumber': !exists(json, 'BankNumber') ? undefined : json['BankNumber'],
        'sWIFTCode': !exists(json, 'SWIFTCode') ? undefined : json['SWIFTCode'],
        'bankControlKey': !exists(json, 'BankControlKey') ? undefined : json['BankControlKey'],
        'bankAccountHolderName': !exists(json, 'BankAccountHolderName') ? undefined : json['BankAccountHolderName'],
        'bankAccountName': !exists(json, 'BankAccountName') ? undefined : json['BankAccountName'],
        'validityStartDate': !exists(json, 'ValidityStartDate') ? undefined : (json['ValidityStartDate'] === null ? null : new Date(json['ValidityStartDate'])),
        'validityEndDate': !exists(json, 'ValidityEndDate') ? undefined : (json['ValidityEndDate'] === null ? null : new Date(json['ValidityEndDate'])),
        'iBAN': !exists(json, 'IBAN') ? undefined : json['IBAN'],
        'iBANValidityStartDate': !exists(json, 'IBANValidityStartDate') ? undefined : (json['IBANValidityStartDate'] === null ? null : new Date(json['IBANValidityStartDate'])),
        'bankAccount': !exists(json, 'BankAccount') ? undefined : json['BankAccount'],
        'bankAccountReferenceText': !exists(json, 'BankAccountReferenceText') ? undefined : json['BankAccountReferenceText'],
        'collectionAuthInd': !exists(json, 'CollectionAuthInd') ? undefined : json['CollectionAuthInd'],
        'cityName': !exists(json, 'CityName') ? undefined : json['CityName'],
        'authorizationGroup': !exists(json, 'AuthorizationGroup') ? undefined : json['AuthorizationGroup'],
    };
}

export function APIBUSINESSPARTNERABusinessPartnerBankTypeToJSON(value?: APIBUSINESSPARTNERABusinessPartnerBankType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BusinessPartner': value.businessPartner,
        'BankIdentification': value.bankIdentification,
        'BankCountryKey': value.bankCountryKey,
        'BankName': value.bankName,
        'BankNumber': value.bankNumber,
        'SWIFTCode': value.sWIFTCode,
        'BankControlKey': value.bankControlKey,
        'BankAccountHolderName': value.bankAccountHolderName,
        'BankAccountName': value.bankAccountName,
        'ValidityStartDate': value.validityStartDate === undefined ? undefined : (value.validityStartDate === null ? null : value.validityStartDate.toISOString()),
        'ValidityEndDate': value.validityEndDate === undefined ? undefined : (value.validityEndDate === null ? null : value.validityEndDate.toISOString()),
        'IBAN': value.iBAN,
        'IBANValidityStartDate': value.iBANValidityStartDate === undefined ? undefined : (value.iBANValidityStartDate === null ? null : value.iBANValidityStartDate.toISOString().substring(0,10)),
        'BankAccount': value.bankAccount,
        'BankAccountReferenceText': value.bankAccountReferenceText,
        'CollectionAuthInd': value.collectionAuthInd,
        'CityName': value.cityName,
        'AuthorizationGroup': value.authorizationGroup,
    };
}

