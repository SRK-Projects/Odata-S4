/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
 */
export interface APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate {
    /**
     * Account Number of Supplier
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
     */
    bPCustomerNumber?: string | null;
    /**
     * Cust.-Specif. Descr. of Business Partner (Plant, Stor. Loc.)
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
     */
    customerPartnerDescription?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
     */
    defaultPartner?: boolean | null;
    /**
     * Account Number of Supplier
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
     */
    supplier?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
     */
    personnelNumber?: string | null;
    /**
     * Number of Contact Person
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
     */
    contactPerson?: string | null;
    /**
     * Business Partner Address Number (from BUT020)
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
     */
    addressID?: string | null;
    /**
     * Authorization Group
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate
     */
    authorizationGroup?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate interface.
 */
export function instanceOfAPIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdateFromJSON(json: any): APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate {
    return APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdateFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bPCustomerNumber': !exists(json, 'BPCustomerNumber') ? undefined : json['BPCustomerNumber'],
        'customerPartnerDescription': !exists(json, 'CustomerPartnerDescription') ? undefined : json['CustomerPartnerDescription'],
        'defaultPartner': !exists(json, 'DefaultPartner') ? undefined : json['DefaultPartner'],
        'supplier': !exists(json, 'Supplier') ? undefined : json['Supplier'],
        'personnelNumber': !exists(json, 'PersonnelNumber') ? undefined : json['PersonnelNumber'],
        'contactPerson': !exists(json, 'ContactPerson') ? undefined : json['ContactPerson'],
        'addressID': !exists(json, 'AddressID') ? undefined : json['AddressID'],
        'authorizationGroup': !exists(json, 'AuthorizationGroup') ? undefined : json['AuthorizationGroup'],
    };
}

export function APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdateToJSON(value?: APIBUSINESSPARTNERACustSalesPartnerFuncTypeUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BPCustomerNumber': value.bPCustomerNumber,
        'CustomerPartnerDescription': value.customerPartnerDescription,
        'DefaultPartner': value.defaultPartner,
        'Supplier': value.supplier,
        'PersonnelNumber': value.personnelNumber,
        'ContactPerson': value.contactPerson,
        'AddressID': value.addressID,
        'AuthorizationGroup': value.authorizationGroup,
    };
}

