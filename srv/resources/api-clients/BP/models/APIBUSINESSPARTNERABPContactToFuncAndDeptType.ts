/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABPContactToFuncAndDeptType
 */
export interface APIBUSINESSPARTNERABPContactToFuncAndDeptType {
    /**
     * BP Relationship Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    relationshipNumber?: string;
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    businessPartnerCompany?: string;
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    businessPartnerPerson?: string;
    /**
     * Validity Date (Valid To)
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    validityEndDate?: Date;
    /**
     * Partner's Authority
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    contactPersonAuthorityType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    contactPersonDepartment?: string | null;
    /**
     * Department at business partner
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    contactPersonDepartmentName?: string | null;
    /**
     * Function of partner
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    contactPersonFunction?: string | null;
    /**
     * Function name of partner
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    contactPersonFunctionName?: string | null;
    /**
     * Notes for Partner
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    contactPersonRemarkText?: string | null;
    /**
     * VIP Partner
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    contactPersonVIPType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    emailAddress?: string | null;
    /**
     * Fax Number: Dialing Code and Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    faxNumber?: string | null;
    /**
     * Fax no.: Extension
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    faxNumberExtension?: string | null;
    /**
     * Telephone No.: Dialing Code and Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    phoneNumber?: string | null;
    /**
     * Telephone no.: Extension
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    phoneNumberExtension?: string | null;
    /**
     * Business Partner Relationship Category
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToFuncAndDeptType
     */
    relationshipCategory?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABPContactToFuncAndDeptType interface.
 */
export function instanceOfAPIBUSINESSPARTNERABPContactToFuncAndDeptType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABPContactToFuncAndDeptTypeFromJSON(json: any): APIBUSINESSPARTNERABPContactToFuncAndDeptType {
    return APIBUSINESSPARTNERABPContactToFuncAndDeptTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABPContactToFuncAndDeptTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABPContactToFuncAndDeptType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'relationshipNumber': !exists(json, 'RelationshipNumber') ? undefined : json['RelationshipNumber'],
        'businessPartnerCompany': !exists(json, 'BusinessPartnerCompany') ? undefined : json['BusinessPartnerCompany'],
        'businessPartnerPerson': !exists(json, 'BusinessPartnerPerson') ? undefined : json['BusinessPartnerPerson'],
        'validityEndDate': !exists(json, 'ValidityEndDate') ? undefined : (new Date(json['ValidityEndDate'])),
        'contactPersonAuthorityType': !exists(json, 'ContactPersonAuthorityType') ? undefined : json['ContactPersonAuthorityType'],
        'contactPersonDepartment': !exists(json, 'ContactPersonDepartment') ? undefined : json['ContactPersonDepartment'],
        'contactPersonDepartmentName': !exists(json, 'ContactPersonDepartmentName') ? undefined : json['ContactPersonDepartmentName'],
        'contactPersonFunction': !exists(json, 'ContactPersonFunction') ? undefined : json['ContactPersonFunction'],
        'contactPersonFunctionName': !exists(json, 'ContactPersonFunctionName') ? undefined : json['ContactPersonFunctionName'],
        'contactPersonRemarkText': !exists(json, 'ContactPersonRemarkText') ? undefined : json['ContactPersonRemarkText'],
        'contactPersonVIPType': !exists(json, 'ContactPersonVIPType') ? undefined : json['ContactPersonVIPType'],
        'emailAddress': !exists(json, 'EmailAddress') ? undefined : json['EmailAddress'],
        'faxNumber': !exists(json, 'FaxNumber') ? undefined : json['FaxNumber'],
        'faxNumberExtension': !exists(json, 'FaxNumberExtension') ? undefined : json['FaxNumberExtension'],
        'phoneNumber': !exists(json, 'PhoneNumber') ? undefined : json['PhoneNumber'],
        'phoneNumberExtension': !exists(json, 'PhoneNumberExtension') ? undefined : json['PhoneNumberExtension'],
        'relationshipCategory': !exists(json, 'RelationshipCategory') ? undefined : json['RelationshipCategory'],
    };
}

export function APIBUSINESSPARTNERABPContactToFuncAndDeptTypeToJSON(value?: APIBUSINESSPARTNERABPContactToFuncAndDeptType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'RelationshipNumber': value.relationshipNumber,
        'BusinessPartnerCompany': value.businessPartnerCompany,
        'BusinessPartnerPerson': value.businessPartnerPerson,
        'ValidityEndDate': value.validityEndDate === undefined ? undefined : (value.validityEndDate.toISOString().substring(0,10)),
        'ContactPersonAuthorityType': value.contactPersonAuthorityType,
        'ContactPersonDepartment': value.contactPersonDepartment,
        'ContactPersonDepartmentName': value.contactPersonDepartmentName,
        'ContactPersonFunction': value.contactPersonFunction,
        'ContactPersonFunctionName': value.contactPersonFunctionName,
        'ContactPersonRemarkText': value.contactPersonRemarkText,
        'ContactPersonVIPType': value.contactPersonVIPType,
        'EmailAddress': value.emailAddress,
        'FaxNumber': value.faxNumber,
        'FaxNumberExtension': value.faxNumberExtension,
        'PhoneNumber': value.phoneNumber,
        'PhoneNumberExtension': value.phoneNumberExtension,
        'RelationshipCategory': value.relationshipCategory,
    };
}

