/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABPAddressIndependentFaxType
 */
export interface APIBUSINESSPARTNERABPAddressIndependentFaxType {
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    businessPartner?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    addressID?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    person?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    ordinalNumber?: string;
    /**
     * Country/Region for Telephone/Fax Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    faxCountry?: string | null;
    /**
     * Fax Number: Dialing Code and Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    faxAreaCodeSubscriberNumber?: string | null;
    /**
     * Fax no.: Extension
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    faxNumberExtension?: string | null;
    /**
     * Complete Number: Dialing Code+Number+Extension
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    internationalFaxNumber?: string | null;
    /**
     * Indicator : Current Default Fax Number
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    isDefaultFaxNumber?: boolean | null;
    /**
     * 
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    validityEndDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABPAddressIndependentFaxType
     */
    validityStartDate?: Date | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABPAddressIndependentFaxType interface.
 */
export function instanceOfAPIBUSINESSPARTNERABPAddressIndependentFaxType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABPAddressIndependentFaxTypeFromJSON(json: any): APIBUSINESSPARTNERABPAddressIndependentFaxType {
    return APIBUSINESSPARTNERABPAddressIndependentFaxTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABPAddressIndependentFaxTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABPAddressIndependentFaxType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'businessPartner': !exists(json, 'BusinessPartner') ? undefined : json['BusinessPartner'],
        'addressID': !exists(json, 'AddressID') ? undefined : json['AddressID'],
        'person': !exists(json, 'Person') ? undefined : json['Person'],
        'ordinalNumber': !exists(json, 'OrdinalNumber') ? undefined : json['OrdinalNumber'],
        'faxCountry': !exists(json, 'FaxCountry') ? undefined : json['FaxCountry'],
        'faxAreaCodeSubscriberNumber': !exists(json, 'FaxAreaCodeSubscriberNumber') ? undefined : json['FaxAreaCodeSubscriberNumber'],
        'faxNumberExtension': !exists(json, 'FaxNumberExtension') ? undefined : json['FaxNumberExtension'],
        'internationalFaxNumber': !exists(json, 'InternationalFaxNumber') ? undefined : json['InternationalFaxNumber'],
        'isDefaultFaxNumber': !exists(json, 'IsDefaultFaxNumber') ? undefined : json['IsDefaultFaxNumber'],
        'validityEndDate': !exists(json, 'ValidityEndDate') ? undefined : (json['ValidityEndDate'] === null ? null : new Date(json['ValidityEndDate'])),
        'validityStartDate': !exists(json, 'ValidityStartDate') ? undefined : (json['ValidityStartDate'] === null ? null : new Date(json['ValidityStartDate'])),
    };
}

export function APIBUSINESSPARTNERABPAddressIndependentFaxTypeToJSON(value?: APIBUSINESSPARTNERABPAddressIndependentFaxType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BusinessPartner': value.businessPartner,
        'AddressID': value.addressID,
        'Person': value.person,
        'OrdinalNumber': value.ordinalNumber,
        'FaxCountry': value.faxCountry,
        'FaxAreaCodeSubscriberNumber': value.faxAreaCodeSubscriberNumber,
        'FaxNumberExtension': value.faxNumberExtension,
        'InternationalFaxNumber': value.internationalFaxNumber,
        'IsDefaultFaxNumber': value.isDefaultFaxNumber,
        'ValidityEndDate': value.validityEndDate === undefined ? undefined : (value.validityEndDate === null ? null : value.validityEndDate.toISOString().substring(0,10)),
        'ValidityStartDate': value.validityStartDate === undefined ? undefined : (value.validityStartDate === null ? null : value.validityStartDate.toISOString().substring(0,10)),
    };
}

