/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABPContactToAddressTypeUpdate
 */
export interface APIBUSINESSPARTNERABPContactToAddressTypeUpdate {
    /**
     * Building (number or code)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    contactPersonBuilding?: string | null;
    /**
     * Communication Method (Key) (Business Address Services)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    contactPersonPrfrdCommMedium?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    contactRelationshipDepartment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    contactRelationshipFunction?: string | null;
    /**
     * Short name for correspondence
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    correspondenceShortName?: string | null;
    /**
     * Floor in building
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    floor?: string | null;
    /**
     * Internal Mail Postal Code
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    inhouseMail?: string | null;
    /**
     * Indicator: Address is standard address
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    isDefaultAddress?: boolean | null;
    /**
     * Room or Apartment Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressTypeUpdate
     */
    roomNumber?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABPContactToAddressTypeUpdate interface.
 */
export function instanceOfAPIBUSINESSPARTNERABPContactToAddressTypeUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABPContactToAddressTypeUpdateFromJSON(json: any): APIBUSINESSPARTNERABPContactToAddressTypeUpdate {
    return APIBUSINESSPARTNERABPContactToAddressTypeUpdateFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABPContactToAddressTypeUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABPContactToAddressTypeUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contactPersonBuilding': !exists(json, 'ContactPersonBuilding') ? undefined : json['ContactPersonBuilding'],
        'contactPersonPrfrdCommMedium': !exists(json, 'ContactPersonPrfrdCommMedium') ? undefined : json['ContactPersonPrfrdCommMedium'],
        'contactRelationshipDepartment': !exists(json, 'ContactRelationshipDepartment') ? undefined : json['ContactRelationshipDepartment'],
        'contactRelationshipFunction': !exists(json, 'ContactRelationshipFunction') ? undefined : json['ContactRelationshipFunction'],
        'correspondenceShortName': !exists(json, 'CorrespondenceShortName') ? undefined : json['CorrespondenceShortName'],
        'floor': !exists(json, 'Floor') ? undefined : json['Floor'],
        'inhouseMail': !exists(json, 'InhouseMail') ? undefined : json['InhouseMail'],
        'isDefaultAddress': !exists(json, 'IsDefaultAddress') ? undefined : json['IsDefaultAddress'],
        'roomNumber': !exists(json, 'RoomNumber') ? undefined : json['RoomNumber'],
    };
}

export function APIBUSINESSPARTNERABPContactToAddressTypeUpdateToJSON(value?: APIBUSINESSPARTNERABPContactToAddressTypeUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ContactPersonBuilding': value.contactPersonBuilding,
        'ContactPersonPrfrdCommMedium': value.contactPersonPrfrdCommMedium,
        'ContactRelationshipDepartment': value.contactRelationshipDepartment,
        'ContactRelationshipFunction': value.contactRelationshipFunction,
        'CorrespondenceShortName': value.correspondenceShortName,
        'Floor': value.floor,
        'InhouseMail': value.inhouseMail,
        'IsDefaultAddress': value.isDefaultAddress,
        'RoomNumber': value.roomNumber,
    };
}

