/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERACustomerDunningType
 */
export interface APIBUSINESSPARTNERACustomerDunningType {
    /**
     * Customer Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    customer?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    companyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    dunningArea?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    dunningBlock?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    dunningLevel?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    dunningProcedure?: string | null;
    /**
     * Account Number of the Dunning Recipient
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    dunningRecipient?: string | null;
    /**
     * Date of Last Dunning Notice
     * @type {Date}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    lastDunnedOn?: Date | null;
    /**
     * Date of the Legal Dunning Proceedings
     * @type {Date}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    legDunningProcedureOn?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    dunningClerk?: string | null;
    /**
     * Authorization Group
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    authorizationGroup?: string | null;
    /**
     * Customer Account Group
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerDunningType
     */
    customerAccountGroup?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERACustomerDunningType interface.
 */
export function instanceOfAPIBUSINESSPARTNERACustomerDunningType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERACustomerDunningTypeFromJSON(json: any): APIBUSINESSPARTNERACustomerDunningType {
    return APIBUSINESSPARTNERACustomerDunningTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERACustomerDunningTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERACustomerDunningType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customer': !exists(json, 'Customer') ? undefined : json['Customer'],
        'companyCode': !exists(json, 'CompanyCode') ? undefined : json['CompanyCode'],
        'dunningArea': !exists(json, 'DunningArea') ? undefined : json['DunningArea'],
        'dunningBlock': !exists(json, 'DunningBlock') ? undefined : json['DunningBlock'],
        'dunningLevel': !exists(json, 'DunningLevel') ? undefined : json['DunningLevel'],
        'dunningProcedure': !exists(json, 'DunningProcedure') ? undefined : json['DunningProcedure'],
        'dunningRecipient': !exists(json, 'DunningRecipient') ? undefined : json['DunningRecipient'],
        'lastDunnedOn': !exists(json, 'LastDunnedOn') ? undefined : (json['LastDunnedOn'] === null ? null : new Date(json['LastDunnedOn'])),
        'legDunningProcedureOn': !exists(json, 'LegDunningProcedureOn') ? undefined : (json['LegDunningProcedureOn'] === null ? null : new Date(json['LegDunningProcedureOn'])),
        'dunningClerk': !exists(json, 'DunningClerk') ? undefined : json['DunningClerk'],
        'authorizationGroup': !exists(json, 'AuthorizationGroup') ? undefined : json['AuthorizationGroup'],
        'customerAccountGroup': !exists(json, 'CustomerAccountGroup') ? undefined : json['CustomerAccountGroup'],
    };
}

export function APIBUSINESSPARTNERACustomerDunningTypeToJSON(value?: APIBUSINESSPARTNERACustomerDunningType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Customer': value.customer,
        'CompanyCode': value.companyCode,
        'DunningArea': value.dunningArea,
        'DunningBlock': value.dunningBlock,
        'DunningLevel': value.dunningLevel,
        'DunningProcedure': value.dunningProcedure,
        'DunningRecipient': value.dunningRecipient,
        'LastDunnedOn': value.lastDunnedOn === undefined ? undefined : (value.lastDunnedOn === null ? null : value.lastDunnedOn.toISOString().substring(0,10)),
        'LegDunningProcedureOn': value.legDunningProcedureOn === undefined ? undefined : (value.legDunningProcedureOn === null ? null : value.legDunningProcedureOn.toISOString().substring(0,10)),
        'DunningClerk': value.dunningClerk,
        'AuthorizationGroup': value.authorizationGroup,
        'CustomerAccountGroup': value.customerAccountGroup,
    };
}

