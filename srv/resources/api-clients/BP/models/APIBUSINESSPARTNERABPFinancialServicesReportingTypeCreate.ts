/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
 */
export interface APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate {
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartner: string;
    /**
     * Non-Resident According to Paragraph 4 AWG
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPIsNonResident?: boolean | null;
    /**
     * Start of Non-Residency According to Paragraph 4 AWG
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPNonResidencyStartDate?: Date | null;
    /**
     * Recipient of Multimillion Loan According to Paragraph 14 GBA
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPIsMultimillionLoanRecipient?: boolean | null;
    /**
     * Borrower Number for Reporting a Loan According to GBA
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPLoanReportingBorrowerNumber?: string | null;
    /**
     * Borrower Entity Number Used to Report Loan acc. to GBA
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPLoanRptgBorrowerEntityNumber?: string | null;
    /**
     * Credit Standing Review According to Paragraph 18 GBA
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPCreditStandingReview?: string | null;
    /**
     * Date of Credit Standing Review According to Paragraph 18 GBA
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPCreditStandingReviewDate?: Date | null;
    /**
     * Loan to Manager According to Paragraph 15 German Banking Act
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartnerLoanToManager?: string | null;
    /**
     * Organization Relationship
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPCompanyRelationship?: string | null;
    /**
     * Creditor Number for Reporting a Loan According to GBA
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPLoanReportingCreditorNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPOeNBIdentNumber?: string | null;
    /**
     * Target Group According to OeNB
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPOeNBTargetGroup?: string | null;
    /**
     * Assign (OeNB) Ident Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPOeNBIdentNumberAssigned?: string | null;
    /**
     * Institute Number According to OeNB
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPOeNBInstituteNumber?: string | null;
    /**
     * Institute Subject to Austrian Reg. Reporting Requirements
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartnerIsOeNBInstitute?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartnerGroup?: string | null;
    /**
     * Group Assignment Category
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPGroupAssignmentCategory?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartnerGroupName?: string | null;
    /**
     * Legal Entity for Business Partner
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartnerLegalEntity?: string | null;
    /**
     * Business Partner Acc. to Para. 4, Sec. 2 of Asset Regulation
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPGerAstRglnRestrictedAstQuota?: string | null;
    /**
     * Debtor Group According to German Law (BerVersV, Template 5)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartnerDebtorGroup?: string | null;
    /**
     * Category of Business Purpose
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartnerBusinessPurpose?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    businessPartnerRiskGroup?: string | null;
    /**
     * Date of Risk Grouping
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPRiskGroupingDate?: Date | null;
    /**
     * Group Affiliation Exists
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPHasGroupAffiliation?: boolean | null;
    /**
     * Monetary Financial Institution
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPIsMonetaryFinInstitution?: boolean | null;
    /**
     * Obligation to Submit to Credit Standing Review - Para.18 GBA
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPCrdtStandingReviewIsRequired?: boolean | null;
    /**
     * Large-Scale Loan Monitoring According to Paragraph 13b GBA
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPLoanMonitoringIsRequired?: boolean | null;
    /**
     * Crediting Relief in Accordance with Paragraph 13/3 GBA
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPHasCreditingRelief?: boolean | null;
    /**
     * Authorized Acc. to Para. 2(1)18b of German Asset Regulation
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPInvestInRstrcdAstIsAuthzd?: boolean | null;
    /**
     * Numeric Code for State Central Bank Country/Region Indicator
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate
     */
    bPCentralBankCountryRegion?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate interface.
 */
export function instanceOfAPIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "businessPartner" in value;

    return isInstance;
}

export function APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreateFromJSON(json: any): APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate {
    return APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreateFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'businessPartner': json['BusinessPartner'],
        'bPIsNonResident': !exists(json, 'BPIsNonResident') ? undefined : json['BPIsNonResident'],
        'bPNonResidencyStartDate': !exists(json, 'BPNonResidencyStartDate') ? undefined : (json['BPNonResidencyStartDate'] === null ? null : new Date(json['BPNonResidencyStartDate'])),
        'bPIsMultimillionLoanRecipient': !exists(json, 'BPIsMultimillionLoanRecipient') ? undefined : json['BPIsMultimillionLoanRecipient'],
        'bPLoanReportingBorrowerNumber': !exists(json, 'BPLoanReportingBorrowerNumber') ? undefined : json['BPLoanReportingBorrowerNumber'],
        'bPLoanRptgBorrowerEntityNumber': !exists(json, 'BPLoanRptgBorrowerEntityNumber') ? undefined : json['BPLoanRptgBorrowerEntityNumber'],
        'bPCreditStandingReview': !exists(json, 'BPCreditStandingReview') ? undefined : json['BPCreditStandingReview'],
        'bPCreditStandingReviewDate': !exists(json, 'BPCreditStandingReviewDate') ? undefined : (json['BPCreditStandingReviewDate'] === null ? null : new Date(json['BPCreditStandingReviewDate'])),
        'businessPartnerLoanToManager': !exists(json, 'BusinessPartnerLoanToManager') ? undefined : json['BusinessPartnerLoanToManager'],
        'bPCompanyRelationship': !exists(json, 'BPCompanyRelationship') ? undefined : json['BPCompanyRelationship'],
        'bPLoanReportingCreditorNumber': !exists(json, 'BPLoanReportingCreditorNumber') ? undefined : json['BPLoanReportingCreditorNumber'],
        'bPOeNBIdentNumber': !exists(json, 'BPOeNBIdentNumber') ? undefined : json['BPOeNBIdentNumber'],
        'bPOeNBTargetGroup': !exists(json, 'BPOeNBTargetGroup') ? undefined : json['BPOeNBTargetGroup'],
        'bPOeNBIdentNumberAssigned': !exists(json, 'BPOeNBIdentNumberAssigned') ? undefined : json['BPOeNBIdentNumberAssigned'],
        'bPOeNBInstituteNumber': !exists(json, 'BPOeNBInstituteNumber') ? undefined : json['BPOeNBInstituteNumber'],
        'businessPartnerIsOeNBInstitute': !exists(json, 'BusinessPartnerIsOeNBInstitute') ? undefined : json['BusinessPartnerIsOeNBInstitute'],
        'businessPartnerGroup': !exists(json, 'BusinessPartnerGroup') ? undefined : json['BusinessPartnerGroup'],
        'bPGroupAssignmentCategory': !exists(json, 'BPGroupAssignmentCategory') ? undefined : json['BPGroupAssignmentCategory'],
        'businessPartnerGroupName': !exists(json, 'BusinessPartnerGroupName') ? undefined : json['BusinessPartnerGroupName'],
        'businessPartnerLegalEntity': !exists(json, 'BusinessPartnerLegalEntity') ? undefined : json['BusinessPartnerLegalEntity'],
        'bPGerAstRglnRestrictedAstQuota': !exists(json, 'BPGerAstRglnRestrictedAstQuota') ? undefined : json['BPGerAstRglnRestrictedAstQuota'],
        'businessPartnerDebtorGroup': !exists(json, 'BusinessPartnerDebtorGroup') ? undefined : json['BusinessPartnerDebtorGroup'],
        'businessPartnerBusinessPurpose': !exists(json, 'BusinessPartnerBusinessPurpose') ? undefined : json['BusinessPartnerBusinessPurpose'],
        'businessPartnerRiskGroup': !exists(json, 'BusinessPartnerRiskGroup') ? undefined : json['BusinessPartnerRiskGroup'],
        'bPRiskGroupingDate': !exists(json, 'BPRiskGroupingDate') ? undefined : (json['BPRiskGroupingDate'] === null ? null : new Date(json['BPRiskGroupingDate'])),
        'bPHasGroupAffiliation': !exists(json, 'BPHasGroupAffiliation') ? undefined : json['BPHasGroupAffiliation'],
        'bPIsMonetaryFinInstitution': !exists(json, 'BPIsMonetaryFinInstitution') ? undefined : json['BPIsMonetaryFinInstitution'],
        'bPCrdtStandingReviewIsRequired': !exists(json, 'BPCrdtStandingReviewIsRequired') ? undefined : json['BPCrdtStandingReviewIsRequired'],
        'bPLoanMonitoringIsRequired': !exists(json, 'BPLoanMonitoringIsRequired') ? undefined : json['BPLoanMonitoringIsRequired'],
        'bPHasCreditingRelief': !exists(json, 'BPHasCreditingRelief') ? undefined : json['BPHasCreditingRelief'],
        'bPInvestInRstrcdAstIsAuthzd': !exists(json, 'BPInvestInRstrcdAstIsAuthzd') ? undefined : json['BPInvestInRstrcdAstIsAuthzd'],
        'bPCentralBankCountryRegion': !exists(json, 'BPCentralBankCountryRegion') ? undefined : json['BPCentralBankCountryRegion'],
    };
}

export function APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreateToJSON(value?: APIBUSINESSPARTNERABPFinancialServicesReportingTypeCreate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BusinessPartner': value.businessPartner,
        'BPIsNonResident': value.bPIsNonResident,
        'BPNonResidencyStartDate': value.bPNonResidencyStartDate === undefined ? undefined : (value.bPNonResidencyStartDate === null ? null : value.bPNonResidencyStartDate.toISOString().substring(0,10)),
        'BPIsMultimillionLoanRecipient': value.bPIsMultimillionLoanRecipient,
        'BPLoanReportingBorrowerNumber': value.bPLoanReportingBorrowerNumber,
        'BPLoanRptgBorrowerEntityNumber': value.bPLoanRptgBorrowerEntityNumber,
        'BPCreditStandingReview': value.bPCreditStandingReview,
        'BPCreditStandingReviewDate': value.bPCreditStandingReviewDate === undefined ? undefined : (value.bPCreditStandingReviewDate === null ? null : value.bPCreditStandingReviewDate.toISOString().substring(0,10)),
        'BusinessPartnerLoanToManager': value.businessPartnerLoanToManager,
        'BPCompanyRelationship': value.bPCompanyRelationship,
        'BPLoanReportingCreditorNumber': value.bPLoanReportingCreditorNumber,
        'BPOeNBIdentNumber': value.bPOeNBIdentNumber,
        'BPOeNBTargetGroup': value.bPOeNBTargetGroup,
        'BPOeNBIdentNumberAssigned': value.bPOeNBIdentNumberAssigned,
        'BPOeNBInstituteNumber': value.bPOeNBInstituteNumber,
        'BusinessPartnerIsOeNBInstitute': value.businessPartnerIsOeNBInstitute,
        'BusinessPartnerGroup': value.businessPartnerGroup,
        'BPGroupAssignmentCategory': value.bPGroupAssignmentCategory,
        'BusinessPartnerGroupName': value.businessPartnerGroupName,
        'BusinessPartnerLegalEntity': value.businessPartnerLegalEntity,
        'BPGerAstRglnRestrictedAstQuota': value.bPGerAstRglnRestrictedAstQuota,
        'BusinessPartnerDebtorGroup': value.businessPartnerDebtorGroup,
        'BusinessPartnerBusinessPurpose': value.businessPartnerBusinessPurpose,
        'BusinessPartnerRiskGroup': value.businessPartnerRiskGroup,
        'BPRiskGroupingDate': value.bPRiskGroupingDate === undefined ? undefined : (value.bPRiskGroupingDate === null ? null : value.bPRiskGroupingDate.toISOString().substring(0,10)),
        'BPHasGroupAffiliation': value.bPHasGroupAffiliation,
        'BPIsMonetaryFinInstitution': value.bPIsMonetaryFinInstitution,
        'BPCrdtStandingReviewIsRequired': value.bPCrdtStandingReviewIsRequired,
        'BPLoanMonitoringIsRequired': value.bPLoanMonitoringIsRequired,
        'BPHasCreditingRelief': value.bPHasCreditingRelief,
        'BPInvestInRstrcdAstIsAuthzd': value.bPInvestInRstrcdAstIsAuthzd,
        'BPCentralBankCountryRegion': value.bPCentralBankCountryRegion,
    };
}

