/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERASupplierCompanyTextType
 */
export interface APIBUSINESSPARTNERASupplierCompanyTextType {
    /**
     * Account Number of Supplier
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierCompanyTextType
     */
    supplier?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierCompanyTextType
     */
    companyCode?: string;
    /**
     * Language key
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierCompanyTextType
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierCompanyTextType
     */
    longTextID?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierCompanyTextType
     */
    longText?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERASupplierCompanyTextType interface.
 */
export function instanceOfAPIBUSINESSPARTNERASupplierCompanyTextType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERASupplierCompanyTextTypeFromJSON(json: any): APIBUSINESSPARTNERASupplierCompanyTextType {
    return APIBUSINESSPARTNERASupplierCompanyTextTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERASupplierCompanyTextTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERASupplierCompanyTextType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'supplier': !exists(json, 'Supplier') ? undefined : json['Supplier'],
        'companyCode': !exists(json, 'CompanyCode') ? undefined : json['CompanyCode'],
        'language': !exists(json, 'Language') ? undefined : json['Language'],
        'longTextID': !exists(json, 'LongTextID') ? undefined : json['LongTextID'],
        'longText': !exists(json, 'LongText') ? undefined : json['LongText'],
    };
}

export function APIBUSINESSPARTNERASupplierCompanyTextTypeToJSON(value?: APIBUSINESSPARTNERASupplierCompanyTextType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Supplier': value.supplier,
        'CompanyCode': value.companyCode,
        'Language': value.language,
        'LongTextID': value.longTextID,
        'LongText': value.longText,
    };
}

