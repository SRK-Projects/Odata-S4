/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABusinessPartnerRoleType
 */
export interface APIBUSINESSPARTNERABusinessPartnerRoleType {
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerRoleType
     */
    businessPartner?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerRoleType
     */
    businessPartnerRole?: string;
    /**
     * Validity Start of a BP Role
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerRoleType
     */
    validFrom?: Date | null;
    /**
     * Validity End of a BP Role
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerRoleType
     */
    validTo?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerRoleType
     */
    authorizationGroup?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABusinessPartnerRoleType interface.
 */
export function instanceOfAPIBUSINESSPARTNERABusinessPartnerRoleType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABusinessPartnerRoleTypeFromJSON(json: any): APIBUSINESSPARTNERABusinessPartnerRoleType {
    return APIBUSINESSPARTNERABusinessPartnerRoleTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABusinessPartnerRoleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABusinessPartnerRoleType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'businessPartner': !exists(json, 'BusinessPartner') ? undefined : json['BusinessPartner'],
        'businessPartnerRole': !exists(json, 'BusinessPartnerRole') ? undefined : json['BusinessPartnerRole'],
        'validFrom': !exists(json, 'ValidFrom') ? undefined : (json['ValidFrom'] === null ? null : new Date(json['ValidFrom'])),
        'validTo': !exists(json, 'ValidTo') ? undefined : (json['ValidTo'] === null ? null : new Date(json['ValidTo'])),
        'authorizationGroup': !exists(json, 'AuthorizationGroup') ? undefined : json['AuthorizationGroup'],
    };
}

export function APIBUSINESSPARTNERABusinessPartnerRoleTypeToJSON(value?: APIBUSINESSPARTNERABusinessPartnerRoleType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BusinessPartner': value.businessPartner,
        'BusinessPartnerRole': value.businessPartnerRole,
        'ValidFrom': value.validFrom === undefined ? undefined : (value.validFrom === null ? null : value.validFrom.toISOString()),
        'ValidTo': value.validTo === undefined ? undefined : (value.validTo === null ? null : value.validTo.toISOString()),
        'AuthorizationGroup': value.authorizationGroup,
    };
}

