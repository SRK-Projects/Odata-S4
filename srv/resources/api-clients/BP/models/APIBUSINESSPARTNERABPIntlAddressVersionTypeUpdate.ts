/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
 */
export interface APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate {
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    addressSearchTerm1?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    addressSearchTerm2?: string | null;
    /**
     * c/o name
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    careOfName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    cityName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    districtName?: string | null;
    /**
     * Form-of-Address Key
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    formOfAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    houseNumber?: string | null;
    /**
     * House number supplement
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    houseNumberSupplementText?: string | null;
    /**
     * Name 1
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    organizationName1?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    organizationName2?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    organizationName3?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    organizationName4?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    personFamilyName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    personGivenName?: string | null;
    /**
     * PO Box city
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    pOBoxDeviatingCityName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    pOBoxLobbyName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    secondaryRegionName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    streetName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    streetPrefixName1?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    streetPrefixName2?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    streetSuffixName1?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    streetSuffixName2?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    tertiaryRegionName?: string | null;
    /**
     * City (different from postal city)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate
     */
    villageName?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate interface.
 */
export function instanceOfAPIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdateFromJSON(json: any): APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate {
    return APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdateFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addressSearchTerm1': !exists(json, 'AddressSearchTerm1') ? undefined : json['AddressSearchTerm1'],
        'addressSearchTerm2': !exists(json, 'AddressSearchTerm2') ? undefined : json['AddressSearchTerm2'],
        'careOfName': !exists(json, 'CareOfName') ? undefined : json['CareOfName'],
        'cityName': !exists(json, 'CityName') ? undefined : json['CityName'],
        'districtName': !exists(json, 'DistrictName') ? undefined : json['DistrictName'],
        'formOfAddress': !exists(json, 'FormOfAddress') ? undefined : json['FormOfAddress'],
        'houseNumber': !exists(json, 'HouseNumber') ? undefined : json['HouseNumber'],
        'houseNumberSupplementText': !exists(json, 'HouseNumberSupplementText') ? undefined : json['HouseNumberSupplementText'],
        'organizationName1': !exists(json, 'OrganizationName1') ? undefined : json['OrganizationName1'],
        'organizationName2': !exists(json, 'OrganizationName2') ? undefined : json['OrganizationName2'],
        'organizationName3': !exists(json, 'OrganizationName3') ? undefined : json['OrganizationName3'],
        'organizationName4': !exists(json, 'OrganizationName4') ? undefined : json['OrganizationName4'],
        'personFamilyName': !exists(json, 'PersonFamilyName') ? undefined : json['PersonFamilyName'],
        'personGivenName': !exists(json, 'PersonGivenName') ? undefined : json['PersonGivenName'],
        'pOBoxDeviatingCityName': !exists(json, 'POBoxDeviatingCityName') ? undefined : json['POBoxDeviatingCityName'],
        'pOBoxLobbyName': !exists(json, 'POBoxLobbyName') ? undefined : json['POBoxLobbyName'],
        'secondaryRegionName': !exists(json, 'SecondaryRegionName') ? undefined : json['SecondaryRegionName'],
        'streetName': !exists(json, 'StreetName') ? undefined : json['StreetName'],
        'streetPrefixName1': !exists(json, 'StreetPrefixName1') ? undefined : json['StreetPrefixName1'],
        'streetPrefixName2': !exists(json, 'StreetPrefixName2') ? undefined : json['StreetPrefixName2'],
        'streetSuffixName1': !exists(json, 'StreetSuffixName1') ? undefined : json['StreetSuffixName1'],
        'streetSuffixName2': !exists(json, 'StreetSuffixName2') ? undefined : json['StreetSuffixName2'],
        'tertiaryRegionName': !exists(json, 'TertiaryRegionName') ? undefined : json['TertiaryRegionName'],
        'villageName': !exists(json, 'VillageName') ? undefined : json['VillageName'],
    };
}

export function APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdateToJSON(value?: APIBUSINESSPARTNERABPIntlAddressVersionTypeUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AddressSearchTerm1': value.addressSearchTerm1,
        'AddressSearchTerm2': value.addressSearchTerm2,
        'CareOfName': value.careOfName,
        'CityName': value.cityName,
        'DistrictName': value.districtName,
        'FormOfAddress': value.formOfAddress,
        'HouseNumber': value.houseNumber,
        'HouseNumberSupplementText': value.houseNumberSupplementText,
        'OrganizationName1': value.organizationName1,
        'OrganizationName2': value.organizationName2,
        'OrganizationName3': value.organizationName3,
        'OrganizationName4': value.organizationName4,
        'PersonFamilyName': value.personFamilyName,
        'PersonGivenName': value.personGivenName,
        'POBoxDeviatingCityName': value.pOBoxDeviatingCityName,
        'POBoxLobbyName': value.pOBoxLobbyName,
        'SecondaryRegionName': value.secondaryRegionName,
        'StreetName': value.streetName,
        'StreetPrefixName1': value.streetPrefixName1,
        'StreetPrefixName2': value.streetPrefixName2,
        'StreetSuffixName1': value.streetSuffixName1,
        'StreetSuffixName2': value.streetSuffixName2,
        'TertiaryRegionName': value.tertiaryRegionName,
        'VillageName': value.villageName,
    };
}

