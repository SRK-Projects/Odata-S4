/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABPDataControllerType
 */
export interface APIBUSINESSPARTNERABPDataControllerType {
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPDataControllerType
     */
    businessPartner?: string;
    /**
     * BP: Data Controller
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPDataControllerType
     */
    dataController?: string;
    /**
     * BP: Purpose
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPDataControllerType
     */
    purposeForPersonalData?: string;
    /**
     * BP: Data Controller Purpose Assignment Status
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPDataControllerType
     */
    dataControlAssignmentStatus?: string | null;
    /**
     * BP: Derivation Indicator for Data Controller (DC)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPDataControllerType
     */
    bPDataControllerIsDerived?: string | null;
    /**
     * BP: Derivation Indicator for Purpose
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPDataControllerType
     */
    purposeDerived?: string | null;
    /**
     * BP: Purpose Type
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPDataControllerType
     */
    purposeType?: string | null;
    /**
     * Business Purpose Completed Flag
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPDataControllerType
     */
    businessPurposeFlag?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABPDataControllerType interface.
 */
export function instanceOfAPIBUSINESSPARTNERABPDataControllerType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABPDataControllerTypeFromJSON(json: any): APIBUSINESSPARTNERABPDataControllerType {
    return APIBUSINESSPARTNERABPDataControllerTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABPDataControllerTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABPDataControllerType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'businessPartner': !exists(json, 'BusinessPartner') ? undefined : json['BusinessPartner'],
        'dataController': !exists(json, 'DataController') ? undefined : json['DataController'],
        'purposeForPersonalData': !exists(json, 'PurposeForPersonalData') ? undefined : json['PurposeForPersonalData'],
        'dataControlAssignmentStatus': !exists(json, 'DataControlAssignmentStatus') ? undefined : json['DataControlAssignmentStatus'],
        'bPDataControllerIsDerived': !exists(json, 'BPDataControllerIsDerived') ? undefined : json['BPDataControllerIsDerived'],
        'purposeDerived': !exists(json, 'PurposeDerived') ? undefined : json['PurposeDerived'],
        'purposeType': !exists(json, 'PurposeType') ? undefined : json['PurposeType'],
        'businessPurposeFlag': !exists(json, 'BusinessPurposeFlag') ? undefined : json['BusinessPurposeFlag'],
    };
}

export function APIBUSINESSPARTNERABPDataControllerTypeToJSON(value?: APIBUSINESSPARTNERABPDataControllerType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BusinessPartner': value.businessPartner,
        'DataController': value.dataController,
        'PurposeForPersonalData': value.purposeForPersonalData,
        'DataControlAssignmentStatus': value.dataControlAssignmentStatus,
        'BPDataControllerIsDerived': value.bPDataControllerIsDerived,
        'PurposeDerived': value.purposeDerived,
        'PurposeType': value.purposeType,
        'BusinessPurposeFlag': value.businessPurposeFlag,
    };
}

