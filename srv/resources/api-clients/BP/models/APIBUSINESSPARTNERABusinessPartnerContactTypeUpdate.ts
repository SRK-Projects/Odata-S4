/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate
 */
export interface APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate {
    /**
     * Validity Date (Valid From)
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate
     */
    validityStartDate?: Date | null;
    /**
     * Standard Relationship
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate
     */
    isStandardRelationship?: boolean | null;
    /**
     * Business Partner Relationship Category
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate
     */
    relationshipCategory?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate interface.
 */
export function instanceOfAPIBUSINESSPARTNERABusinessPartnerContactTypeUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABusinessPartnerContactTypeUpdateFromJSON(json: any): APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate {
    return APIBUSINESSPARTNERABusinessPartnerContactTypeUpdateFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABusinessPartnerContactTypeUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'validityStartDate': !exists(json, 'ValidityStartDate') ? undefined : (json['ValidityStartDate'] === null ? null : new Date(json['ValidityStartDate'])),
        'isStandardRelationship': !exists(json, 'IsStandardRelationship') ? undefined : json['IsStandardRelationship'],
        'relationshipCategory': !exists(json, 'RelationshipCategory') ? undefined : json['RelationshipCategory'],
    };
}

export function APIBUSINESSPARTNERABusinessPartnerContactTypeUpdateToJSON(value?: APIBUSINESSPARTNERABusinessPartnerContactTypeUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ValidityStartDate': value.validityStartDate === undefined ? undefined : (value.validityStartDate === null ? null : value.validityStartDate.toISOString().substring(0,10)),
        'IsStandardRelationship': value.isStandardRelationship,
        'RelationshipCategory': value.relationshipCategory,
    };
}

