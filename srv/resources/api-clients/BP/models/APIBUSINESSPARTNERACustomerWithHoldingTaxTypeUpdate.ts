/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExemptionRate1 } from './ExemptionRate1';
import {
    ExemptionRate1FromJSON,
    ExemptionRate1FromJSONTyped,
    ExemptionRate1ToJSON,
} from './ExemptionRate1';

/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
 */
export interface APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate {
    /**
     * Withholding Tax Code
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    withholdingTaxCode?: string | null;
    /**
     * Indicator: Withholding Tax Agent?
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    withholdingTaxAgent?: boolean | null;
    /**
     * Obligated to Withhold Tax From
     * @type {Date}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    obligationDateBegin?: Date | null;
    /**
     * Obligated to Withhold Tax Until
     * @type {Date}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    obligationDateEnd?: Date | null;
    /**
     * Withholding tax identification number
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    withholdingTaxNumber?: string | null;
    /**
     * Exemption Certificate Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    withholdingTaxCertificate?: string | null;
    /**
     * 
     * @type {ExemptionRate1}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    withholdingTaxExmptPercent?: ExemptionRate1 | null;
    /**
     * Date on Which Exemption Begins
     * @type {Date}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    exemptionDateBegin?: Date | null;
    /**
     * Date on Which Exemption Ends
     * @type {Date}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    exemptionDateEnd?: Date | null;
    /**
     * Reason for Exemption
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    exemptionReason?: string | null;
    /**
     * Authorization Group
     * @type {string}
     * @memberof APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate
     */
    authorizationGroup?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate interface.
 */
export function instanceOfAPIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdateFromJSON(json: any): APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate {
    return APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdateFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'withholdingTaxCode': !exists(json, 'WithholdingTaxCode') ? undefined : json['WithholdingTaxCode'],
        'withholdingTaxAgent': !exists(json, 'WithholdingTaxAgent') ? undefined : json['WithholdingTaxAgent'],
        'obligationDateBegin': !exists(json, 'ObligationDateBegin') ? undefined : (json['ObligationDateBegin'] === null ? null : new Date(json['ObligationDateBegin'])),
        'obligationDateEnd': !exists(json, 'ObligationDateEnd') ? undefined : (json['ObligationDateEnd'] === null ? null : new Date(json['ObligationDateEnd'])),
        'withholdingTaxNumber': !exists(json, 'WithholdingTaxNumber') ? undefined : json['WithholdingTaxNumber'],
        'withholdingTaxCertificate': !exists(json, 'WithholdingTaxCertificate') ? undefined : json['WithholdingTaxCertificate'],
        'withholdingTaxExmptPercent': !exists(json, 'WithholdingTaxExmptPercent') ? undefined : ExemptionRate1FromJSON(json['WithholdingTaxExmptPercent']),
        'exemptionDateBegin': !exists(json, 'ExemptionDateBegin') ? undefined : (json['ExemptionDateBegin'] === null ? null : new Date(json['ExemptionDateBegin'])),
        'exemptionDateEnd': !exists(json, 'ExemptionDateEnd') ? undefined : (json['ExemptionDateEnd'] === null ? null : new Date(json['ExemptionDateEnd'])),
        'exemptionReason': !exists(json, 'ExemptionReason') ? undefined : json['ExemptionReason'],
        'authorizationGroup': !exists(json, 'AuthorizationGroup') ? undefined : json['AuthorizationGroup'],
    };
}

export function APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdateToJSON(value?: APIBUSINESSPARTNERACustomerWithHoldingTaxTypeUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'WithholdingTaxCode': value.withholdingTaxCode,
        'WithholdingTaxAgent': value.withholdingTaxAgent,
        'ObligationDateBegin': value.obligationDateBegin === undefined ? undefined : (value.obligationDateBegin === null ? null : value.obligationDateBegin.toISOString().substring(0,10)),
        'ObligationDateEnd': value.obligationDateEnd === undefined ? undefined : (value.obligationDateEnd === null ? null : value.obligationDateEnd.toISOString().substring(0,10)),
        'WithholdingTaxNumber': value.withholdingTaxNumber,
        'WithholdingTaxCertificate': value.withholdingTaxCertificate,
        'WithholdingTaxExmptPercent': ExemptionRate1ToJSON(value.withholdingTaxExmptPercent),
        'ExemptionDateBegin': value.exemptionDateBegin === undefined ? undefined : (value.exemptionDateBegin === null ? null : value.exemptionDateBegin.toISOString().substring(0,10)),
        'ExemptionDateEnd': value.exemptionDateEnd === undefined ? undefined : (value.exemptionDateEnd === null ? null : value.exemptionDateEnd.toISOString().substring(0,10)),
        'ExemptionReason': value.exemptionReason,
        'AuthorizationGroup': value.authorizationGroup,
    };
}

