/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERASupplierPartnerFuncType
 */
export interface APIBUSINESSPARTNERASupplierPartnerFuncType {
    /**
     * Account Number of Supplier
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    supplier?: string;
    /**
     * Purchasing Organization
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    purchasingOrganization?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    supplierSubrange?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    plant?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    partnerFunction?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    partnerCounter?: string;
    /**
     * 
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    defaultPartner?: boolean | null;
    /**
     * Record Creation Date
     * @type {Date}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    creationDate?: Date | null;
    /**
     * Name of Person Responsible for Creating the Object
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    createdByUser?: string | null;
    /**
     * Reference to other supplier
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    referenceSupplier?: string | null;
    /**
     * Authorization Group
     * @type {string}
     * @memberof APIBUSINESSPARTNERASupplierPartnerFuncType
     */
    authorizationGroup?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERASupplierPartnerFuncType interface.
 */
export function instanceOfAPIBUSINESSPARTNERASupplierPartnerFuncType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERASupplierPartnerFuncTypeFromJSON(json: any): APIBUSINESSPARTNERASupplierPartnerFuncType {
    return APIBUSINESSPARTNERASupplierPartnerFuncTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERASupplierPartnerFuncTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERASupplierPartnerFuncType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'supplier': !exists(json, 'Supplier') ? undefined : json['Supplier'],
        'purchasingOrganization': !exists(json, 'PurchasingOrganization') ? undefined : json['PurchasingOrganization'],
        'supplierSubrange': !exists(json, 'SupplierSubrange') ? undefined : json['SupplierSubrange'],
        'plant': !exists(json, 'Plant') ? undefined : json['Plant'],
        'partnerFunction': !exists(json, 'PartnerFunction') ? undefined : json['PartnerFunction'],
        'partnerCounter': !exists(json, 'PartnerCounter') ? undefined : json['PartnerCounter'],
        'defaultPartner': !exists(json, 'DefaultPartner') ? undefined : json['DefaultPartner'],
        'creationDate': !exists(json, 'CreationDate') ? undefined : (json['CreationDate'] === null ? null : new Date(json['CreationDate'])),
        'createdByUser': !exists(json, 'CreatedByUser') ? undefined : json['CreatedByUser'],
        'referenceSupplier': !exists(json, 'ReferenceSupplier') ? undefined : json['ReferenceSupplier'],
        'authorizationGroup': !exists(json, 'AuthorizationGroup') ? undefined : json['AuthorizationGroup'],
    };
}

export function APIBUSINESSPARTNERASupplierPartnerFuncTypeToJSON(value?: APIBUSINESSPARTNERASupplierPartnerFuncType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Supplier': value.supplier,
        'PurchasingOrganization': value.purchasingOrganization,
        'SupplierSubrange': value.supplierSubrange,
        'Plant': value.plant,
        'PartnerFunction': value.partnerFunction,
        'PartnerCounter': value.partnerCounter,
        'DefaultPartner': value.defaultPartner,
        'CreationDate': value.creationDate === undefined ? undefined : (value.creationDate === null ? null : value.creationDate.toISOString().substring(0,10)),
        'CreatedByUser': value.createdByUser,
        'ReferenceSupplier': value.referenceSupplier,
        'AuthorizationGroup': value.authorizationGroup,
    };
}

