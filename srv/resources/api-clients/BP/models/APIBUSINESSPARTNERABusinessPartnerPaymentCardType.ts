/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABusinessPartnerPaymentCardType
 */
export interface APIBUSINESSPARTNERABusinessPartnerPaymentCardType {
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    businessPartner?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    paymentCardID?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    paymentCardType?: string;
    /**
     * Payment Cards: Card Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    cardNumber?: string;
    /**
     * BP: Standard Payment Card
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    isStandardCard?: boolean | null;
    /**
     * Description of Credit Card Details
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    cardDescription?: string | null;
    /**
     * Payment cards: Valid from
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    validityDate?: Date | null;
    /**
     * Payment Cards: Valid To
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    validityEndDate?: Date | null;
    /**
     * Payment Cards: Name of Cardholder
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    cardHolder?: string | null;
    /**
     * Payment cards: Issuing bank
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    cardIssuingBank?: string | null;
    /**
     * Payment Cards: Date of Issue
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    cardIssueDate?: Date | null;
    /**
     * Payment Cards: Reason for Payment Card Lock
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    paymentCardLock?: string | null;
    /**
     * Masked Payment Card Number ( Digital Payment )
     * @type {string}
     * @memberof APIBUSINESSPARTNERABusinessPartnerPaymentCardType
     */
    maskedCardNumber?: string | null;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABusinessPartnerPaymentCardType interface.
 */
export function instanceOfAPIBUSINESSPARTNERABusinessPartnerPaymentCardType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABusinessPartnerPaymentCardTypeFromJSON(json: any): APIBUSINESSPARTNERABusinessPartnerPaymentCardType {
    return APIBUSINESSPARTNERABusinessPartnerPaymentCardTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABusinessPartnerPaymentCardTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABusinessPartnerPaymentCardType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'businessPartner': !exists(json, 'BusinessPartner') ? undefined : json['BusinessPartner'],
        'paymentCardID': !exists(json, 'PaymentCardID') ? undefined : json['PaymentCardID'],
        'paymentCardType': !exists(json, 'PaymentCardType') ? undefined : json['PaymentCardType'],
        'cardNumber': !exists(json, 'CardNumber') ? undefined : json['CardNumber'],
        'isStandardCard': !exists(json, 'IsStandardCard') ? undefined : json['IsStandardCard'],
        'cardDescription': !exists(json, 'CardDescription') ? undefined : json['CardDescription'],
        'validityDate': !exists(json, 'ValidityDate') ? undefined : (json['ValidityDate'] === null ? null : new Date(json['ValidityDate'])),
        'validityEndDate': !exists(json, 'ValidityEndDate') ? undefined : (json['ValidityEndDate'] === null ? null : new Date(json['ValidityEndDate'])),
        'cardHolder': !exists(json, 'CardHolder') ? undefined : json['CardHolder'],
        'cardIssuingBank': !exists(json, 'CardIssuingBank') ? undefined : json['CardIssuingBank'],
        'cardIssueDate': !exists(json, 'CardIssueDate') ? undefined : (json['CardIssueDate'] === null ? null : new Date(json['CardIssueDate'])),
        'paymentCardLock': !exists(json, 'PaymentCardLock') ? undefined : json['PaymentCardLock'],
        'maskedCardNumber': !exists(json, 'MaskedCardNumber') ? undefined : json['MaskedCardNumber'],
    };
}

export function APIBUSINESSPARTNERABusinessPartnerPaymentCardTypeToJSON(value?: APIBUSINESSPARTNERABusinessPartnerPaymentCardType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BusinessPartner': value.businessPartner,
        'PaymentCardID': value.paymentCardID,
        'PaymentCardType': value.paymentCardType,
        'CardNumber': value.cardNumber,
        'IsStandardCard': value.isStandardCard,
        'CardDescription': value.cardDescription,
        'ValidityDate': value.validityDate === undefined ? undefined : (value.validityDate === null ? null : value.validityDate.toISOString().substring(0,10)),
        'ValidityEndDate': value.validityEndDate === undefined ? undefined : (value.validityEndDate === null ? null : value.validityEndDate.toISOString().substring(0,10)),
        'CardHolder': value.cardHolder,
        'CardIssuingBank': value.cardIssuingBank,
        'CardIssueDate': value.cardIssueDate === undefined ? undefined : (value.cardIssueDate === null ? null : value.cardIssueDate.toISOString().substring(0,10)),
        'PaymentCardLock': value.paymentCardLock,
        'MaskedCardNumber': value.maskedCardNumber,
    };
}

