/* tslint:disable */
/* eslint-disable */
/**
 * Business Partner (A2X)
 *     This service enables you to create, display, update, and delete data related to Business Partner, Supplier, and Customer with the data provided in a payload, in an API call. This service also supports create deep entity operation and batch processing.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { APIBUSINESSPARTNERAAddressEmailAddressType } from './APIBUSINESSPARTNERAAddressEmailAddressType';
import {
    APIBUSINESSPARTNERAAddressEmailAddressTypeFromJSON,
    APIBUSINESSPARTNERAAddressEmailAddressTypeFromJSONTyped,
    APIBUSINESSPARTNERAAddressEmailAddressTypeToJSON,
} from './APIBUSINESSPARTNERAAddressEmailAddressType';
import type { APIBUSINESSPARTNERAAddressFaxNumberType } from './APIBUSINESSPARTNERAAddressFaxNumberType';
import {
    APIBUSINESSPARTNERAAddressFaxNumberTypeFromJSON,
    APIBUSINESSPARTNERAAddressFaxNumberTypeFromJSONTyped,
    APIBUSINESSPARTNERAAddressFaxNumberTypeToJSON,
} from './APIBUSINESSPARTNERAAddressFaxNumberType';
import type { APIBUSINESSPARTNERAAddressHomePageURLType } from './APIBUSINESSPARTNERAAddressHomePageURLType';
import {
    APIBUSINESSPARTNERAAddressHomePageURLTypeFromJSON,
    APIBUSINESSPARTNERAAddressHomePageURLTypeFromJSONTyped,
    APIBUSINESSPARTNERAAddressHomePageURLTypeToJSON,
} from './APIBUSINESSPARTNERAAddressHomePageURLType';
import type { APIBUSINESSPARTNERAAddressPhoneNumberType } from './APIBUSINESSPARTNERAAddressPhoneNumberType';
import {
    APIBUSINESSPARTNERAAddressPhoneNumberTypeFromJSON,
    APIBUSINESSPARTNERAAddressPhoneNumberTypeFromJSONTyped,
    APIBUSINESSPARTNERAAddressPhoneNumberTypeToJSON,
} from './APIBUSINESSPARTNERAAddressPhoneNumberType';

/**
 * 
 * @export
 * @interface APIBUSINESSPARTNERABPContactToAddressType
 */
export interface APIBUSINESSPARTNERABPContactToAddressType {
    /**
     * BP Relationship Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    relationshipNumber?: string;
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    businessPartnerCompany?: string;
    /**
     * Business Partner Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    businessPartnerPerson?: string;
    /**
     * Validity Date (Valid To)
     * @type {Date}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    validityEndDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    addressID?: string;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    addressNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    additionalStreetPrefixName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    additionalStreetSuffixName?: string | null;
    /**
     * Address Time Zone
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    addressTimeZone?: string | null;
    /**
     * c/o name
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    careOfName?: string | null;
    /**
     * City code for city/street file
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    cityCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    cityName?: string | null;
    /**
     * Company Postal Code (for Large Customers)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    companyPostalCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    country?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    county?: string | null;
    /**
     * Number of Delivery Service
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    deliveryServiceNumber?: string | null;
    /**
     * Type of Delivery Service
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    deliveryServiceTypeCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    district?: string | null;
    /**
     * Form-of-Address Key
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    formOfAddress?: string | null;
    /**
     * Full name of a party (Bus. Partner, Org. Unit, Doc. address)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    fullName?: string | null;
    /**
     * City (different from postal city)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    homeCityName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    houseNumber?: string | null;
    /**
     * House number supplement
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    houseNumberSupplementText?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    language?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    pOBox?: string | null;
    /**
     * PO Box city
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    pOBoxDeviatingCityName?: string | null;
    /**
     * PO Box of Country/Region
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    pOBoxDeviatingCountry?: string | null;
    /**
     * Region for PO Box (Country/Region, State, Province, ...)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    pOBoxDeviatingRegion?: string | null;
    /**
     * Flag: PO Box Without Number
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    pOBoxIsWithoutNumber?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    pOBoxLobbyName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    pOBoxPostalCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    person?: string | null;
    /**
     * City Postal Code
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    postalCode?: string | null;
    /**
     * Communication Method (Key) (Business Address Services)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    prfrdCommMediumType?: string | null;
    /**
     * Region (State, Province, County)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    region?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    streetName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    streetPrefixName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    streetSuffixName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    taxJurisdiction?: string | null;
    /**
     * Transportation zone to or from which the goods are delivered
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    transportZone?: string | null;
    /**
     * Version ID for International Addresses
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    addressRepresentationCode?: string | null;
    /**
     * Building (number or code)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    contactPersonBuilding?: string | null;
    /**
     * Communication Method (Key) (Business Address Services)
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    contactPersonPrfrdCommMedium?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    contactRelationshipDepartment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    contactRelationshipFunction?: string | null;
    /**
     * Short name for correspondence
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    correspondenceShortName?: string | null;
    /**
     * Floor in building
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    floor?: string | null;
    /**
     * Internal Mail Postal Code
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    inhouseMail?: string | null;
    /**
     * Indicator: Address is standard address
     * @type {boolean}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    isDefaultAddress?: boolean | null;
    /**
     * Room or Apartment Number
     * @type {string}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    roomNumber?: string | null;
    /**
     * 
     * @type {Array<APIBUSINESSPARTNERAAddressEmailAddressType>}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    toEmailAddress?: Array<APIBUSINESSPARTNERAAddressEmailAddressType>;
    /**
     * 
     * @type {Array<APIBUSINESSPARTNERAAddressFaxNumberType>}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    toFaxNumber?: Array<APIBUSINESSPARTNERAAddressFaxNumberType>;
    /**
     * 
     * @type {Array<APIBUSINESSPARTNERAAddressPhoneNumberType>}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    toMobilePhoneNumber?: Array<APIBUSINESSPARTNERAAddressPhoneNumberType>;
    /**
     * 
     * @type {Array<APIBUSINESSPARTNERAAddressPhoneNumberType>}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    toPhoneNumber?: Array<APIBUSINESSPARTNERAAddressPhoneNumberType>;
    /**
     * 
     * @type {Array<APIBUSINESSPARTNERAAddressHomePageURLType>}
     * @memberof APIBUSINESSPARTNERABPContactToAddressType
     */
    toURLAddress?: Array<APIBUSINESSPARTNERAAddressHomePageURLType>;
}

/**
 * Check if a given object implements the APIBUSINESSPARTNERABPContactToAddressType interface.
 */
export function instanceOfAPIBUSINESSPARTNERABPContactToAddressType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function APIBUSINESSPARTNERABPContactToAddressTypeFromJSON(json: any): APIBUSINESSPARTNERABPContactToAddressType {
    return APIBUSINESSPARTNERABPContactToAddressTypeFromJSONTyped(json, false);
}

export function APIBUSINESSPARTNERABPContactToAddressTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIBUSINESSPARTNERABPContactToAddressType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'relationshipNumber': !exists(json, 'RelationshipNumber') ? undefined : json['RelationshipNumber'],
        'businessPartnerCompany': !exists(json, 'BusinessPartnerCompany') ? undefined : json['BusinessPartnerCompany'],
        'businessPartnerPerson': !exists(json, 'BusinessPartnerPerson') ? undefined : json['BusinessPartnerPerson'],
        'validityEndDate': !exists(json, 'ValidityEndDate') ? undefined : (new Date(json['ValidityEndDate'])),
        'addressID': !exists(json, 'AddressID') ? undefined : json['AddressID'],
        'addressNumber': !exists(json, 'AddressNumber') ? undefined : json['AddressNumber'],
        'additionalStreetPrefixName': !exists(json, 'AdditionalStreetPrefixName') ? undefined : json['AdditionalStreetPrefixName'],
        'additionalStreetSuffixName': !exists(json, 'AdditionalStreetSuffixName') ? undefined : json['AdditionalStreetSuffixName'],
        'addressTimeZone': !exists(json, 'AddressTimeZone') ? undefined : json['AddressTimeZone'],
        'careOfName': !exists(json, 'CareOfName') ? undefined : json['CareOfName'],
        'cityCode': !exists(json, 'CityCode') ? undefined : json['CityCode'],
        'cityName': !exists(json, 'CityName') ? undefined : json['CityName'],
        'companyPostalCode': !exists(json, 'CompanyPostalCode') ? undefined : json['CompanyPostalCode'],
        'country': !exists(json, 'Country') ? undefined : json['Country'],
        'county': !exists(json, 'County') ? undefined : json['County'],
        'deliveryServiceNumber': !exists(json, 'DeliveryServiceNumber') ? undefined : json['DeliveryServiceNumber'],
        'deliveryServiceTypeCode': !exists(json, 'DeliveryServiceTypeCode') ? undefined : json['DeliveryServiceTypeCode'],
        'district': !exists(json, 'District') ? undefined : json['District'],
        'formOfAddress': !exists(json, 'FormOfAddress') ? undefined : json['FormOfAddress'],
        'fullName': !exists(json, 'FullName') ? undefined : json['FullName'],
        'homeCityName': !exists(json, 'HomeCityName') ? undefined : json['HomeCityName'],
        'houseNumber': !exists(json, 'HouseNumber') ? undefined : json['HouseNumber'],
        'houseNumberSupplementText': !exists(json, 'HouseNumberSupplementText') ? undefined : json['HouseNumberSupplementText'],
        'language': !exists(json, 'Language') ? undefined : json['Language'],
        'pOBox': !exists(json, 'POBox') ? undefined : json['POBox'],
        'pOBoxDeviatingCityName': !exists(json, 'POBoxDeviatingCityName') ? undefined : json['POBoxDeviatingCityName'],
        'pOBoxDeviatingCountry': !exists(json, 'POBoxDeviatingCountry') ? undefined : json['POBoxDeviatingCountry'],
        'pOBoxDeviatingRegion': !exists(json, 'POBoxDeviatingRegion') ? undefined : json['POBoxDeviatingRegion'],
        'pOBoxIsWithoutNumber': !exists(json, 'POBoxIsWithoutNumber') ? undefined : json['POBoxIsWithoutNumber'],
        'pOBoxLobbyName': !exists(json, 'POBoxLobbyName') ? undefined : json['POBoxLobbyName'],
        'pOBoxPostalCode': !exists(json, 'POBoxPostalCode') ? undefined : json['POBoxPostalCode'],
        'person': !exists(json, 'Person') ? undefined : json['Person'],
        'postalCode': !exists(json, 'PostalCode') ? undefined : json['PostalCode'],
        'prfrdCommMediumType': !exists(json, 'PrfrdCommMediumType') ? undefined : json['PrfrdCommMediumType'],
        'region': !exists(json, 'Region') ? undefined : json['Region'],
        'streetName': !exists(json, 'StreetName') ? undefined : json['StreetName'],
        'streetPrefixName': !exists(json, 'StreetPrefixName') ? undefined : json['StreetPrefixName'],
        'streetSuffixName': !exists(json, 'StreetSuffixName') ? undefined : json['StreetSuffixName'],
        'taxJurisdiction': !exists(json, 'TaxJurisdiction') ? undefined : json['TaxJurisdiction'],
        'transportZone': !exists(json, 'TransportZone') ? undefined : json['TransportZone'],
        'addressRepresentationCode': !exists(json, 'AddressRepresentationCode') ? undefined : json['AddressRepresentationCode'],
        'contactPersonBuilding': !exists(json, 'ContactPersonBuilding') ? undefined : json['ContactPersonBuilding'],
        'contactPersonPrfrdCommMedium': !exists(json, 'ContactPersonPrfrdCommMedium') ? undefined : json['ContactPersonPrfrdCommMedium'],
        'contactRelationshipDepartment': !exists(json, 'ContactRelationshipDepartment') ? undefined : json['ContactRelationshipDepartment'],
        'contactRelationshipFunction': !exists(json, 'ContactRelationshipFunction') ? undefined : json['ContactRelationshipFunction'],
        'correspondenceShortName': !exists(json, 'CorrespondenceShortName') ? undefined : json['CorrespondenceShortName'],
        'floor': !exists(json, 'Floor') ? undefined : json['Floor'],
        'inhouseMail': !exists(json, 'InhouseMail') ? undefined : json['InhouseMail'],
        'isDefaultAddress': !exists(json, 'IsDefaultAddress') ? undefined : json['IsDefaultAddress'],
        'roomNumber': !exists(json, 'RoomNumber') ? undefined : json['RoomNumber'],
        'toEmailAddress': !exists(json, 'to_EmailAddress') ? undefined : ((json['to_EmailAddress'] as Array<any>).map(APIBUSINESSPARTNERAAddressEmailAddressTypeFromJSON)),
        'toFaxNumber': !exists(json, 'to_FaxNumber') ? undefined : ((json['to_FaxNumber'] as Array<any>).map(APIBUSINESSPARTNERAAddressFaxNumberTypeFromJSON)),
        'toMobilePhoneNumber': !exists(json, 'to_MobilePhoneNumber') ? undefined : ((json['to_MobilePhoneNumber'] as Array<any>).map(APIBUSINESSPARTNERAAddressPhoneNumberTypeFromJSON)),
        'toPhoneNumber': !exists(json, 'to_PhoneNumber') ? undefined : ((json['to_PhoneNumber'] as Array<any>).map(APIBUSINESSPARTNERAAddressPhoneNumberTypeFromJSON)),
        'toURLAddress': !exists(json, 'to_URLAddress') ? undefined : ((json['to_URLAddress'] as Array<any>).map(APIBUSINESSPARTNERAAddressHomePageURLTypeFromJSON)),
    };
}

export function APIBUSINESSPARTNERABPContactToAddressTypeToJSON(value?: APIBUSINESSPARTNERABPContactToAddressType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'RelationshipNumber': value.relationshipNumber,
        'BusinessPartnerCompany': value.businessPartnerCompany,
        'BusinessPartnerPerson': value.businessPartnerPerson,
        'ValidityEndDate': value.validityEndDate === undefined ? undefined : (value.validityEndDate.toISOString().substring(0,10)),
        'AddressID': value.addressID,
        'AddressNumber': value.addressNumber,
        'AdditionalStreetPrefixName': value.additionalStreetPrefixName,
        'AdditionalStreetSuffixName': value.additionalStreetSuffixName,
        'AddressTimeZone': value.addressTimeZone,
        'CareOfName': value.careOfName,
        'CityCode': value.cityCode,
        'CityName': value.cityName,
        'CompanyPostalCode': value.companyPostalCode,
        'Country': value.country,
        'County': value.county,
        'DeliveryServiceNumber': value.deliveryServiceNumber,
        'DeliveryServiceTypeCode': value.deliveryServiceTypeCode,
        'District': value.district,
        'FormOfAddress': value.formOfAddress,
        'FullName': value.fullName,
        'HomeCityName': value.homeCityName,
        'HouseNumber': value.houseNumber,
        'HouseNumberSupplementText': value.houseNumberSupplementText,
        'Language': value.language,
        'POBox': value.pOBox,
        'POBoxDeviatingCityName': value.pOBoxDeviatingCityName,
        'POBoxDeviatingCountry': value.pOBoxDeviatingCountry,
        'POBoxDeviatingRegion': value.pOBoxDeviatingRegion,
        'POBoxIsWithoutNumber': value.pOBoxIsWithoutNumber,
        'POBoxLobbyName': value.pOBoxLobbyName,
        'POBoxPostalCode': value.pOBoxPostalCode,
        'Person': value.person,
        'PostalCode': value.postalCode,
        'PrfrdCommMediumType': value.prfrdCommMediumType,
        'Region': value.region,
        'StreetName': value.streetName,
        'StreetPrefixName': value.streetPrefixName,
        'StreetSuffixName': value.streetSuffixName,
        'TaxJurisdiction': value.taxJurisdiction,
        'TransportZone': value.transportZone,
        'AddressRepresentationCode': value.addressRepresentationCode,
        'ContactPersonBuilding': value.contactPersonBuilding,
        'ContactPersonPrfrdCommMedium': value.contactPersonPrfrdCommMedium,
        'ContactRelationshipDepartment': value.contactRelationshipDepartment,
        'ContactRelationshipFunction': value.contactRelationshipFunction,
        'CorrespondenceShortName': value.correspondenceShortName,
        'Floor': value.floor,
        'InhouseMail': value.inhouseMail,
        'IsDefaultAddress': value.isDefaultAddress,
        'RoomNumber': value.roomNumber,
        'to_EmailAddress': value.toEmailAddress === undefined ? undefined : ((value.toEmailAddress as Array<any>).map(APIBUSINESSPARTNERAAddressEmailAddressTypeToJSON)),
        'to_FaxNumber': value.toFaxNumber === undefined ? undefined : ((value.toFaxNumber as Array<any>).map(APIBUSINESSPARTNERAAddressFaxNumberTypeToJSON)),
        'to_MobilePhoneNumber': value.toMobilePhoneNumber === undefined ? undefined : ((value.toMobilePhoneNumber as Array<any>).map(APIBUSINESSPARTNERAAddressPhoneNumberTypeToJSON)),
        'to_PhoneNumber': value.toPhoneNumber === undefined ? undefined : ((value.toPhoneNumber as Array<any>).map(APIBUSINESSPARTNERAAddressPhoneNumberTypeToJSON)),
        'to_URLAddress': value.toURLAddress === undefined ? undefined : ((value.toURLAddress as Array<any>).map(APIBUSINESSPARTNERAAddressHomePageURLTypeToJSON)),
    };
}

